import React from 'react'; 
// 리액트 라이브러리를 가져옵니다. React는 UI를 구성하기 위한 라이브러리이며, 이 코드는 React 컴포넌트를 정의하기 위한 것입니다.

const Test01 = () => { 
     // Test01 컴포넌트는 함수형 컴포넌트입니다. 함수형 컴포넌트는 JSX를 반환하며, 간단한 UI 로직을 처리할 수 있습니다.
     
     // JavaScript 구역
     const test1 = () => { 
          // test1 함수는 버튼을 클릭했을 때 'test1'이라는 알림창(alert)을 띄웁니다.
          alert('test1');
     }

     const test2 = () => {
          // test2 함수는 버튼을 클릭했을 때 'test2'라는 알림창을 띄웁니다.
          alert('test2');
     }

     const test3 = (num) => {
          // test3 함수는 인자로 받은 숫자를 alert 창에 출력합니다.
          // 이 함수는 num을 받아서 'num = ' + num 의 형태로 문자열을 합쳐 출력합니다.
          alert('num = ' + num);
     }

     const test4 = (num) => {
          // test4 함수는 템플릿 리터럴을 사용해 num 값을 alert 창에 출력합니다.
          // 템플릿 리터럴을 사용하면 변수를 문자열 안에 쉽게 포함할 수 있습니다.
          alert(`num = ${ num }`);
     }

     return (
          // JSX 구역
          <div> 
               {/* JSX에서는 자바스크립트 표현식을 사용하여 동적으로 값을 렌더링할 수 있습니다. */}
               <h2> 이벤트 : on + 첫글자 대문자 </h2>
               {/* JSX에서 이벤트는 "on"으로 시작하고, 그 뒤에 CamelCase(첫글자 대문자)를 사용합니다. 예를 들어, onClick이 버튼 클릭 이벤트를 처리하는 방식입니다. */}

               <p>
                    {/* <button onClick={ test1 메서드 호출}>클릭</button> */}
                    {/* 이 버튼은 test1 함수를 호출하며, 클릭 시 'test1'이라는 알림이 뜹니다. */}
                    <button onClick={ test1 }>클릭1</button>
                    {/* onClick 이벤트 핸들러에 test1 함수를 직접 전달하고 있습니다. 버튼을 클릭하면 해당 함수가 호출됩니다. */}
                    
                    <button onClick={ test2 }>클릭2</button>
                    {/* 이 버튼은 test2 함수를 호출하며, 클릭 시 'test2'라는 알림이 뜹니다. */}
                    
                    <button onClick={ () => test3(10) }>클릭3</button>
                    {/* 이 버튼은 test3 함수를 호출하며, num 값으로 10을 전달합니다. 클릭하면 'num = 10'이라는 알림이 뜹니다. */}
                    {/* test3(10)을 바로 전달하지 않고, 함수로 감싸서 클릭 시에만 실행되도록 합니다. 이 방식으로 값을 넘길 수 있습니다. */}
                    
                    <button onClick={ () => test4(20) }>클릭4</button>
                    {/* 이 버튼은 test4 함수를 호출하며, num 값으로 20을 전달합니다. 클릭하면 템플릿 리터럴을 통해 'num = 20'이 출력됩니다. */}
                    {/* 마찬가지로, test4 함수도 즉시 실행되지 않도록 () => test4(20) 형태로 함수 안에 감싸서 전달합니다. */}
               </p>
          </div>
     );
};

export default Test01;

/*
리엑트는 순수 자바스크립트가 아니다 => 베이스가 자바스크립트일 뿐이다
리액트 컴포넌트는 자바스크립트를 기반으로 하지만, JSX와 같은 React만의 확장 기능을 포함하고 있습니다. 이로 인해 자바스크립트처럼 보이지만 리액트만의 특별한 문법을 사용합니다.
함수 뒤에 ()를 붙여서 호출하면 새로고침 하자마자 무조건 실행된다.
=> 해결하려면 함수로 한 번 묶어준다.
함수를 즉시 실행하지 않고 이벤트가 발생했을 때만 실행하려면 함수로 한 번 감싸서 전달해야 합니다.
=> 값을 넘길때는 함수 ex)  () => 함수(값)
특정 값을 전달하려면 화살표 함수를 사용하여 원하는 값을 넘기는 방식을 사용합니다. () => 함수(값) 형태로 함수 호출을 감싸면 원하는 값과 함께 함수가 나중에 실행되도록 할 수 있습니다.
*/
