<?xml version="1.0" encoding="UTF-8"?>
<!-- FilmNote/src/main/java/mapper/userMapper.xml -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userSQL">
<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~ 회원가입 로그인 ~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    <!-- 사용자 로그인 -->
    <!-- uid와 upwd로 사용자를 조회하여 로그인 처리 -->
    <select id="loginUser" parameterType="map" resultType="user">
        SELECT uid, upwd, uname, gender, birth1, birth2, birth3, email1, email2, tel1, tel2, tel3
        FROM user_tb
        WHERE uid = #{uid} AND upwd = #{upwd}
        <!-- #{uid}와 #{upwd}: 로그인 폼에서 받은 사용자 입력값을 매핑 -->
    </select>
    
    <!-- 사용자 등록 -->
    <!-- 새로운 사용자를 user_tb 테이블에 등록 -->
    <insert id="insertUser" parameterType="user">
        INSERT INTO user_tb (uid, upwd, uname, gender, birth1, birth2, birth3, email1, email2, tel1, tel2, tel3)
        VALUES (#{uid}, #{upwd}, #{uname}, #{gender}, #{birth1}, #{birth2}, #{birth3}, #{email1}, #{email2}, #{tel1}, #{tel2}, #{tel3})
        <!-- #{uid}, #{upwd}, #{uname}, ...: 회원가입 폼에서 받은 데이터를 테이블에 삽입 -->
    </insert>

    <!-- ID 중복 체크 -->
    <!-- 회원가입 시 입력된 uid가 이미 존재하는지 확인 -->
    <select id="checkIdExists" parameterType="string" resultType="int">
        SELECT COUNT(*) FROM user_tb WHERE uid = #{uid}
        <!-- #{uid}: 입력된 아이디를 기준으로 중복 여부를 확인 -->
    </select>
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~ 회원가입 로그인 ~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~ 회원정보수정 탈퇴 ~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<!-- 회원정보 수정 -->
	<!-- uid에 해당하는 사용자의 정보를 수정 (이름, 비밀번호, 생년월일, 연락처 등) -->
	<update id="userEdit" parameterType="user.bean.UserDTO">
		UPDATE user_tb SET
		uname = #{uname},
		upwd = #{upwd},
		gender = #{gender},
		birth1 = #{birth1},
		birth2 = #{birth2},
		birth3 = #{birth3},
		email1 = #{email1},
		email2 = #{email2},
		tel1 = #{tel1},
		tel2 = #{tel2},
		tel3 = #{tel3}
		WHERE uid = #{uid}
		<!-- #{uid}: 수정할 사용자의 고유 ID로 해당 사용자를 식별 -->
	</update>
	
	<!-- 비밀번호 체크 -->
	<!-- uid에 해당하는 사용자의 비밀번호를 조회하여 체크 (회원정보 수정, 비밀번호 변경 시 사용) -->
	<select id="pwdCheck" parameterType="String" resultType="String">
	    SELECT upwd FROM user_tb WHERE uid = #{uid}
	    <!-- #{uid}: 비밀번호를 확인하려는 사용자의 아이디 -->
	</select>

	<!-- 회원탈퇴 -->
	<!-- uid에 해당하는 사용자를 테이블에서 삭제 -->
	<delete id="userWithdraw" parameterType="String">
		DELETE FROM user_tb	WHERE uid = #{uid}
		<!-- #{uid}: 탈퇴할 사용자의 고유 ID -->
	</delete>

	<!-- uid에 해당하는 사용자 정보 가져오기 -->
	<!-- 회원 정보를 조회하여 수정 또는 조회 화면에 표시 -->
	<select id="getMember" parameterType="String" resultType="user.bean.UserDTO">
		SELECT * FROM user_tb where uid = #{uid}
		<!-- #{uid}: 정보를 조회하려는 사용자의 고유 ID -->
	</select>
	<!--  ~~~~~~~~~~~~~~~~~~~~~~~~~~~ 회원정보수정 탈퇴 ~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

</mapper>
