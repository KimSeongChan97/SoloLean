<?xml version="1.0" encoding="UTF-8"?>
<!-- XML 문서의 버전과 인코딩을 지정합니다. 이 파일은 UTF-8 인코딩을 사용하여 작성되었습니다. -->

<web-app 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns="http://xmlns.jcp.org/xml/ns/javaee" 
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" 
    id="WebApp_ID" 
    version="4.0">
    <!-- 
        이 web-app 요소는 웹 애플리케이션의 루트 요소로, 전체 애플리케이션의 설정을 정의합니다.
        xmlns:xsi는 XML 스키마 인스턴스(namespace)를 지정하고, xmlns는 네임스페이스를 지정합니다.
        xsi:schemaLocation은 XML 스키마의 위치를 정의하여, XML 파일이 올바른지 검증할 때 사용됩니다.
        id는 웹 애플리케이션의 식별자 역할을 하며, version은 웹 애플리케이션의 스펙 버전을 지정합니다.
        여기서는 버전 4.0의 스펙을 따르고 있습니다.
    -->

  <display-name>testServlet2</display-name>
  <!-- display-name 요소는 이 웹 애플리케이션의 이름을 정의합니다.
       이 이름은 주로 관리 툴이나 서버 로그에 표시될 때 사용됩니다.
       여기서는 웹 애플리케이션 이름을 "testServlet2"로 지정하였습니다. -->

  <servlet>
    <servlet-name>PersonServlet</servlet-name>
    <!-- servlet-name 요소는 서블릿을 식별하는 이름을 지정합니다.
         이 이름은 servlet-class 요소와 매핑되며, 다른 서블릿 설정에서 참조할 수 있습니다.
         여기서는 서블릿 이름을 "PersonServlet"으로 지정하였습니다. -->

    <servlet-class>com.person.PersonServlet</servlet-class>
    <!-- servlet-class 요소는 실제 서블릿 구현 클래스의 경로를 지정합니다.
         이 경로는 패키지 구조를 포함하며, 서버가 이 클래스를 로드하여 서블릿 인스턴스를 생성할 수 있게 합니다.
         여기서는 com.person 패키지에 있는 PersonServlet 클래스를 지정하였습니다. -->
  </servlet>

  <servlet-mapping>
    <servlet-name>PersonServlet</servlet-name>
    <!-- servlet-mapping 요소는 특정 서블릿 이름과 URL 패턴을 매핑합니다.
         이 서블릿 이름은 위에서 정의한 servlet-name과 일치해야 합니다.
         여기서는 "PersonServlet" 서블릿과 매핑됩니다. -->

    <url-pattern>/person</url-pattern>
    <!-- url-pattern 요소는 서블릿이 처리할 요청의 URL 패턴을 지정합니다.
         클라이언트가 "/person" 경로로 요청을 보낼 때 이 서블릿이 처리하게 됩니다.
         예를 들어, 클라이언트가 http://localhost:8080/Context명/person 으로 요청하면, 이 서블릿이 요청을 처리하게 됩니다. -->
  </servlet-mapping>

  <welcome-file-list>
    <!-- welcome-file-list 요소는 웹 애플리케이션의 기본 페이지(웰컴 파일)를 정의합니다.
         클라이언트가 특정 경로로 접근할 때 명시적으로 파일을 지정하지 않으면 이 목록에 있는 파일들이 순서대로 탐색됩니다.
         예를 들어, http://localhost:8080/Context명/ 으로 접근할 때 이 목록에 있는 파일이 존재하면 해당 파일이 열립니다. -->

    <welcome-file>index.html</welcome-file>
    <!-- index.html 파일이 존재할 경우, 이 파일이 가장 먼저 열리게 됩니다. -->

    <welcome-file>index.jsp</welcome-file>
    <!-- index.jsp 파일이 존재할 경우, index.html이 없을 때 이 파일이 열립니다. -->

    <welcome-file>index.htm</welcome-file>
    <!-- index.htm 파일이 존재할 경우, 위의 파일들이 없을 때 이 파일이 열립니다. -->

    <welcome-file>default.html</welcome-file>
    <!-- default.html 파일이 존재할 경우, 위의 파일들이 없을 때 이 파일이 열립니다. -->

    <welcome-file>default.jsp</welcome-file>
    <!-- default.jsp 파일이 존재할 경우, 위의 파일들이 없을 때 이 파일이 열립니다. -->

    <welcome-file>default.htm</welcome-file>
    <!-- default.htm 파일이 존재할 경우, 위의 파일들이 없을 때 이 파일이 열립니다. -->
  </welcome-file-list>
</web-app>
