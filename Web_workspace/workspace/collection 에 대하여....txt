
컬렉션

1. Collection - > 순서, 중복
2. Set 	- > 순서 X , 중복 X
3. Map<key, Value>

--------------------------------------+
1. Collection
설명: Collection은 자바의 자료구조를 다루는 가장 상위 개념입니다. 자바의 컬렉션 프레임워크는 데이터를 효과적으로 저장하고 관리하기 위한 다양한 인터페이스와 클래스를 제공합니다.

특징:

순서 유지 가능: List와 같은 하위 인터페이스는 데이터를 저장한 순서를 유지합니다.
중복 허용: List 계열은 중복된 요소를 허용합니다.
하위 인터페이스:

List: 순서를 유지하며, 중복된 데이터를 허용합니다. (예: ArrayList, LinkedList)
Set: 순서를 유지하지 않으며, 중복을 허용하지 않습니다.
Queue: 순서를 유지하며, 주로 FIFO(First In First Out) 방식으로 데이터를 관리합니다.
주요 메서드:

add(E e): 요소 추가
remove(Object o): 요소 제거
clear(): 모든 요소 제거
size(): 컬렉션의 크기 반환
contains(Object o): 특정 요소가 존재하는지 확인

2. Set
설명: Set은 중복되지 않는 요소들을 저장하는 자료구조입니다. 컬렉션의 일종이며, Collection 인터페이스를 상속받습니다.

특징:

순서가 없음: 일반적으로 요소가 저장된 순서를 유지하지 않습니다. (LinkedHashSet은 예외적으로 순서를 유지함)
중복이 허용되지 않음: 동일한 요소는 한 번만 저장됩니다.
주요 구현 클래스:

HashSet: 가장 일반적인 Set 구현체로, 저장된 순서를 보장하지 않으며 해시를 사용해 요소를 저장합니다. 탐색 속도가 빠릅니다.
LinkedHashSet: 삽입된 순서를 유지하는 Set 구현체입니다. HashSet과 비슷하지만, 삽입된 순서를 보장합니다.
TreeSet: 정렬된 순서로 요소를 저장하는 Set입니다. 이진 트리 구조를 사용하며, Comparable 또는 Comparator 인터페이스를 구현한 요소들을 정렬합니다.
주요 메서드:

add(E e): 요소 추가
remove(Object o): 요소 제거
clear(): 모든 요소 제거
size(): 집합의 크기 반환
contains(Object o): 특정 요소가 존재하는지 확인

3. Map (Key, Value 구조)
설명: Map은 키(key)와 값(value)을 한 쌍으로 저장하는 자료구조입니다. 키는 중복될 수 없으며, 각각의 키는 고유해야 합니다. 값은 중복될 수 있습니다.

특징:

Key는 중복될 수 없음: 각 키는 고유하며, 하나의 키에는 하나의 값만이 매핑됩니다.
Value는 중복 가능: 동일한 값을 여러 키에 할당할 수 있습니다.
Key-Value 쌍: 각 키는 특정 값에 대응됩니다.
순서 보장 여부: HashMap은 순서를 보장하지 않으며, LinkedHashMap은 삽입된 순서를 유지하고, TreeMap은 키에 대해 정렬된 순서를 유지합니다.
주요 구현 클래스:

HashMap: 가장 많이 사용되는 Map 구현체로, 키와 값의 순서를 보장하지 않습니다. 해시 테이블을 사용하여 매우 빠른 성능을 제공합니다.
LinkedHashMap: 삽입된 순서를 유지하는 Map 구현체입니다. HashMap과 비슷하지만, 순서를 보장하는 점이 다릅니다.
TreeMap: 키를 기준으로 정렬된 순서를 유지하는 Map입니다. 이진 트리 구조를 사용합니다.
주요 메서드:

put(K key, V value): 키와 값을 추가하거나, 키가 이미 존재할 경우 값을 덮어씁니다.
get(Object key): 키에 해당하는 값을 반환합니다.
remove(Object key): 키에 해당하는 값을 삭제합니다.
containsKey(Object key): 특정 키가 존재하는지 확인합니다.
containsValue(Object value): 특정 값이 존재하는지 확인합니다.
keySet(): 모든 키를 반환합니다.
values(): 모든 값을 반환합니다.


---
정리
Collection: 자바의 기본적인 자료구조 인터페이스로, List, Set, Queue 등이 하위 인터페이스로 포함됩니다.

List: 순서를 유지하며 중복을 허용하는 자료구조 (ArrayList, LinkedList 등).
Set: 순서를 유지하지 않으며 중복을 허용하지 않는 자료구조 (HashSet, TreeSet 등).
Queue: FIFO(First In First Out) 방식의 자료구조로, 순서를 유지하며 중복을 허용함 (LinkedList).
Set: 중복을 허용하지 않으며, 순서를 유지하지 않는 자료구조입니다. HashSet, LinkedHashSet, TreeSet 등이 있습니다.

Map: 키-값 쌍으로 데이터를 저장하는 자료구조로, 키는 중복되지 않고, 값은 중복될 수 있습니다. HashMap, LinkedHashMap, TreeMap 등이 있습니다
