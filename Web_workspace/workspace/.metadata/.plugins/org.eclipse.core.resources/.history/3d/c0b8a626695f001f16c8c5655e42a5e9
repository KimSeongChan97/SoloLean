<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>배열</title>
</head>
<body>


	<script type="text/javascript">
		// 배열
		// let myArray1 = ["홍길동", "자바스크립트", "학생"];
		// 배열을 초기화하는 두 가지 방법이 있음: 
		// 첫 번째는 대괄호([])를 사용한 리터럴 방식, 두 번째는 Array 객체를 사용한 방식
		// 여기서는 Array 객체를 사용한 방식을 사용하고 있음
		let myArray1 = new Array("홍길동", "자바스크립트", "학생"); // 내장 객체? (= 자바에서의 클래스)
		
		// 위 코드에서는 Array 객체를 사용하여 배열을 생성했습니다.
		// JavaScript에서 Array는 내장 객체로서, new 키워드를 사용해 배열을 생성할 수 있습니다.
		// 자바스크립트에서는 클래스의 개념 대신 객체를 사용하며, Array도 그중 하나입니다.

		document.write("<hr>자바스크립트에서의 배열</hr><br>"); // 문서에 배열 제목을 출력
		document.write("<br>");
		document.write(myArray1[0] + "<br>"); // 배열의 첫 번째 요소 출력
		document.write(myArray1[1] + "<br>"); // 배열의 두 번째 요소 출력
		document.write(myArray1[2] + "<br>"); // 배열의 세 번째 요소 출력
		document.write("<hr>"); // 구분선 추가

		// 배열의 요소 값을 변경
		myArray1[0] = "HongGilDong"; // 배열의 첫 번째 요소를 새로운 값으로 변경
		myArray1[1] = "JavaScript";  // 배열의 두 번째 요소를 새로운 값으로 변경
		myArray1[2] = "Student";     // 배열의 세 번째 요소를 새로운 값으로 변경

		document.write(myArray1[0] + "<br>"); // 변경된 첫 번째 요소 출력
		document.write(myArray1[1] + "<br>"); // 변경된 두 번째 요소 출력
		document.write(myArray1[2] + "<br>"); // 변경된 세 번째 요소 출력
		document.write("<hr>"); // 구분선 추가

		// 빈 배열 생성
		// let myArray2 = [];
		// 빈 배열을 만드는 두 가지 방법이 있음: 첫 번째는 대괄호([]) 사용, 두 번째는 new Array() 사용
		// 여기서는 Array 객체를 사용해 빈 배열을 생성
		let myArray2 = new Array();

		// 배열에 1부터 10까지의 값을 추가
		for (let i = 0; i < 10; i++) {
			myArray2[i] = i + 1; // 배열의 각 인덱스에 i + 1 값을 저장
		}

		// 배열의 길이를 출력
		document.write("배열 길이 : " + myArray2.length + "<br>");

		// 배열의 모든 요소를 출력
		for (let i = 0; i < myArray2.length; i++) {
			document.write(myArray2[i] + " "); // 배열의 각 요소를 출력, 공백으로 구분
		}
		
		
	</script>
</body>
</html>

<!-- 

자바
클래스(메뉴) -- new 객체

자바스크립트
객체 -- 인스턴스

 주석 분석:
배열 선언 및 초기화:

let myArray1 = new Array("홍길동", "자바스크립트", "학생");는 Array 객체를 사용하여 배열을 초기화하는 방식입니다. 자바스크립트에서 배열은 객체이며, new Array() 생성자를 사용해 배열을 만들 수 있습니다.
자바스크립트에서는 배열을 생성하는 두 가지 방식이 있습니다. 하나는 [](배열 리터럴) 방식, 다른 하나는 new Array() 생성자 방식입니다. 두 방식 모두 배열을 생성할 수 있지만, 배열 리터럴 방식이 더 일반적으로 사용됩니다.
배열 요소 접근 및 수정:

myArray1[0], myArray1[1], myArray1[2]를 사용하여 배열의 각 요소에 접근하고, myArray1[0] = "HongGilDong"과 같이 배열의 요소를 변경할 수 있습니다. 배열의 인덱스는 0부터 시작합니다.
빈 배열 생성:

let myArray2 = new Array();는 빈 배열을 생성하는 방법 중 하나입니다. 이 방법을 사용하면 크기가 0인 빈 배열이 생성됩니다. 이후 반복문을 통해 배열에 값을 추가합니다.
배열 길이:

myArray2.length는 배열의 길이를 반환합니다. 여기서는 배열에 10개의 요소가 추가되었으므로, 배열의 길이는 10이 됩니다. 배열의 길이는 자동으로 관리되며, 배열에 값을 추가하거나 제거할 때마다 업데이트됩니다.
배열 순회 및 출력:

for 반복문을 사용하여 배열의 모든 요소를 순회하며 각 요소를 출력합니다. 자바스크립트에서 배열의 인덱스는 0부터 시작하므로 for 루프의 조건은 i < myArray2.length가 됩니다.

 -->
