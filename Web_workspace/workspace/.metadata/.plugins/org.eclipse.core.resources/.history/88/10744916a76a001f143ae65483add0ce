// 중복체크 여부를 확인하는 변수
let idChecked = false;

// ID 중복 체크 함수
function checkId() {
    let id = document.getElementById('id').value;

    if (id === '') {
        document.getElementById('idDiv').innerHTML = "먼저 아이디를 입력하세요 !!";
    } else {
        window.open("./checkId.jsp?id=" + id, "myWindow", "width=450 height=150 top=100 left=800");
        idChecked = true;
    }
}

// 아이디 변경 시 중복 체크 상태 초기화
document.getElementById('id').addEventListener('input', function () {
    idChecked = false;
});

// 비밀번호 유효성 검사 함수
function validatePassword() {
    var pwd = document.getElementById("pwd").value;
    var repwd = document.getElementById("repwd").value;

    if (pwd.length < 3) {
        document.getElementById("pwDiv").innerHTML = "비밀번호는 최소 3자 이상이어야 합니다.";
        return false;
    }

    if (pwd !== repwd) {
        document.getElementById("pwDiv").innerHTML = "비밀번호가 일치하지 않습니다.";
        return false;
    }

    var pwdPattern = /^(?=.*[0-9])(?=.*[!@#$%^&*])/;
    if (!pwdPattern.test(pwd)) {
        document.getElementById("pwDiv").innerHTML = "비밀번호는 숫자와 특수문자를 포함해야 합니다.";
        return false;
    }

    document.getElementById("pwDiv").innerHTML = "";
    return true;
}

// 이메일 유효성 검사 함수
function validateEmail() {
    var email1 = document.getElementById("email1").value;
    var email2 = document.getElementById("email2").value;

    var fullEmail = email1 + "@" + email2;
    var emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

    if (!emailPattern.test(fullEmail)) {
        alert("유효한 이메일 주소를 입력하세요.");
        return false;
    }
    return true;
}

// 폼 전체의 유효성 검사 함수
function validateForm() {
    if (!validateName()) {
        return false;
    }

    if (!idChecked) {
        alert("아이디 중복체크를 완료해주세요.");
        return false;
    }

    if (!validatePassword()) {
        return false;
    }

    if (!validateEmail()) {
        return false;
    }

    return true;
}

// 우편번호 검색을 위한 Daum API 함수
function checkPost() {
    new daum.Postcode({
        oncomplete: function (data) {
            var addr = '';

            if (data.userSelectedType === 'R') {
                addr = data.roadAddress;
            } else {
                addr = data.jibunAddress;
            }

            document.getElementById('zipcode').value = data.zonecode;
            document.getElementById("addr1").value = addr;
            document.getElementById("addr2").focus();
        }
    }).open();
}
