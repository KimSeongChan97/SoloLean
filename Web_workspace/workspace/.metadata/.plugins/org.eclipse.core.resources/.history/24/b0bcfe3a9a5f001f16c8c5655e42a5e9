<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>연인과의 날짜 계산</title>
</head>
<body onload="insertDate()"> <!-- 페이지가 로드될 때 insertDate() 함수가 자동으로 실행되도록 설정 -->

    <h1>오늘의 날짜: <span id="Today"></span></h1> <!-- 오늘 날짜가 표시될 영역 -->
    <h1>우리가 만난 날: <span id="metDate"></span></h1> <!-- 우리가 만난 날이 표시될 영역 -->
    <h1>오늘까지 우리는 <span id="Since"></span>일이다.</h1> <!-- 우리가 만난 후 경과한 일수가 표시될 영역 -->

<script type="text/javascript">

function insertDate() {
    // 만난 년도를 입력받고, 숫자인지 확인하며, 2000년 이후인지 체크
    let year = parseInt(prompt("우리가 만난 년도는?")); // 사용자로부터 연도를 입력받음
    // 연도가 2000년 이전이거나 숫자가 아닐 경우 다시 입력 받음
    while (isNaN(year) || year < 2000) { 
        alert("2000년 이후로 입력해주세요"); // 잘못된 입력에 대해 경고 메시지 출력
        year = parseInt(prompt("우리가 만난 년도는?")); // 다시 연도를 입력받음
    }

    // 만난 달을 입력받고, 1~12 사이인지 확인
    let month = parseInt(prompt("우리가 만난 달은?")); // 사용자로부터 월을 입력받음
    // 달이 1보다 작거나 12보다 클 경우 다시 입력 받음
    while (isNaN(month) || month < 1 || month > 12) { 
        alert("1부터 12 사이로 입력해주세요"); // 잘못된 입력에 대해 경고 메시지 출력
        month = parseInt(prompt("우리가 만난 달은?")); // 다시 월을 입력받음
    }

    // 만난 일을 입력받고, 1~31 사이인지 확인
    let date = parseInt(prompt("우리가 만난 일은?")); // 사용자로부터 일을 입력받음
    // 일이 1보다 작거나 31보다 클 경우 다시 입력 받음
    while (isNaN(date) || date < 1 || date > 31) { 
        alert("1부터 31 사이로 입력해주세요"); // 잘못된 입력에 대해 경고 메시지 출력
        date = parseInt(prompt("우리가 만난 일은?")); // 다시 일을 입력받음
    }

    // 우리가 만난 날을 페이지에 출력
    // year, month, date 값을 이용해 우리가 만난 날짜를 `metDate`라는 id를 가진 요소에 표시
    document.getElementById("metDate").innerHTML = `${year}년 ${month}월 ${date}일`;

    // Date 객체를 사용해 우리가 만난 날짜를 생성
    // month는 자바스크립트의 Date 객체에서 0부터 시작하므로, -1을 해줘야 올바른 월로 처리됨
    var metDate = new Date(year, month - 1, date); // Date 객체를 사용해 만난 날을 저장
    var today = new Date(); // 현재 날짜를 Date 객체로 저장

    // 현재 날짜와 만난 날 사이의 차이를 계산, 두 날짜 간의 차이는 밀리초 단위로 반환됨
    var since = today - metDate; // 경과 시간을 밀리초 단위로 계산
    
    // 만약 만난 날짜가 현재 날짜보다 이후일 경우(잘못된 날짜 입력), 경고 메시지 출력 후 다시 입력 받음
    if (since < 0) {
       alert("날짜를 다시 입력해주세요"); // 잘못된 날짜 입력에 대해 경고 메시지 출력
       insertDate(); // 함수를 다시 호출하여 사용자에게 날짜를 다시 입력받도록 함
    }

    // 밀리초 단위의 시간을 일(day) 단위로 변환
    // 1일 = 86400000 밀리초 (1000밀리초 * 60초 * 60분 * 24시간)
    var day = Math.floor(since / 86400000); // 소수점을 버리고 가장 가까운 정수로 일수를 계산

    // 계산된 경과 일수를 페이지에 출력
    // 경과 일수는 Since라는 id를 가진 요소에 표시됨
    document.getElementById("Since").innerHTML = day;

    // 오늘 날짜를 사용자의 지역 형식에 맞게 표시
    // toLocaleString() 메서드는 날짜와 시간을 사용자의 로케일에 맞는 형식으로 반환
    document.getElementById("Today").innerHTML = today.toLocaleString(); 
}

</script>

</body>
</html>
