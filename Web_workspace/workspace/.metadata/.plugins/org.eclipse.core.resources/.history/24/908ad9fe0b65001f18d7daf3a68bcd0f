<?xml version="1.0" encoding="UTF-8"?>
<!-- XML 선언부: 이 파일이 XML 형식임을 선언합니다. 
버전은 1.0이고, 인코딩 방식은 UTF-8을 사용합니다. UTF-8은 한글 등 다양한 문자셋을 지원합니다. 
XML 파일의 첫 번째 줄에 위치하며, 이 선언이 있어야 XML 문서가 올바르게 해석됩니다. -->

<comment>
    <!-- <comment> 태그는 이 XML 파일의 루트 요소(root element)로, 전체 댓글 데이터를 감쌉니다. 
    이 안에 댓글 관련 모든 정보가 들어갑니다. 
    루트 요소는 XML 문서의 최상위 요소로, 모든 다른 요소들을 포함합니다. 
    XML 문서에는 반드시 하나의 루트 요소가 있어야 합니다. -->

    <result>true</result>
    <!-- <result> 태그는 요청의 성공 여부를 나타냅니다. 
    여기서는 true로 설정되어 있어, 요청이 성공적으로 처리되었음을 의미합니다. 
    true는 XML 파일에서 논리적 참(true) 값을 나타냅니다. 
    이 태그를 통해 클라이언트는 서버의 요청 처리 결과를 확인할 수 있습니다. -->

    <message></message>
    <!-- <message> 태그는 요청 처리에 대한 추가 메시지를 제공하는데 사용됩니다. 
    이 경우, 태그 안에 내용이 비어 있어 추가 메시지가 없음을 나타냅니다. 
    오류 발생 시 오류 메시지 등을 여기에 포함시킬 수 있습니다. 
    예를 들어, 댓글 작성 중 오류가 발생했다면 이 태그에 오류 메시지를 포함시킬 수 있습니다. -->

    <total_count>24</total_count>
    <!-- <total_count> 태그는 전체 댓글의 수를 나타냅니다. 
    이 값은 시스템에서 댓글 목록을 페이지로 나눌 때 사용될 수 있습니다. 
    예를 들어, 페이지당 10개의 댓글을 표시하려면 3페이지가 필요합니다. 
    클라이언트는 이 값을 바탕으로 페이지 네비게이션을 구현할 수 있습니다. -->

    <!-- <item> 태그는 각각의 댓글 데이터를 나타냅니다. 
    여러 개의 <item> 요소를 통해 여러 댓글이 포함될 수 있습니다. 
    이 XML 문서에서는 <item> 요소가 여러 번 반복되어 각 댓글을 나타냅니다. -->
    <item>
        <num>1</num>
        <!-- <num> 태그는 각 댓글의 고유 번호를 나타냅니다. 
        이 번호는 댓글을 식별하기 위해 사용됩니다. 여기서는 1번 댓글입니다. 
        이 번호를 통해 특정 댓글을 수정하거나 삭제하는 등의 작업을 할 수 있습니다. -->

        <writer>
            <![CDATA[홍길동]]>
        </writer>
        <!-- <writer> 태그는 댓글 작성자의 이름을 나타냅니다. 
        <![CDATA[]]> 구문을 사용하여 이름 안에 특수문자나 한글이 포함될 수 있도록 했습니다. 
        "홍길동"이라는 이름이 CDATA 섹션 안에 포함되어 있습니다. 
        CDATA 섹션은 XML 파서에 의해 해석되지 않으며, 특수문자나 다양한 문자셋(예: 한글)을 안전하게 저장합니다. -->

        <content>
            <![CDATA[Ajax로 구현하는 덧글 예제 입니다. 잘 되는지 볼까요?]]>
        </content>
        <!-- <content> 태그는 댓글의 실제 내용을 나타냅니다. 
        <![CDATA[]]> 구문을 사용하여 특수문자나 한글이 포함된 텍스트를 안전하게 포함시킬 수 있습니다. 
        이 예제에서는 "Ajax로 구현하는 덧글 예제 입니다. 잘 되는지 볼까요?"라는 내용이 담겨 있습니다. 
        댓글 내용에는 특수문자가 포함될 수 있으므로, CDATA 섹션을 사용하여 이러한 문자를 안전하게 처리합니다. -->

        <datetime>
            <![CDATA[2021-03-15 12:21:42]]>
        </datetime>
        <!-- <datetime> 태그는 댓글이 작성된 날짜와 시간을 나타냅니다. 
        여기서는 "2021-03-15 12:21:42"로, 연-월-일 시:분:초 형식으로 날짜와 시간이 기록됩니다. 
        CDATA 섹션을 사용하여 날짜와 시간 형식을 안전하게 포함시켰습니다. 
        날짜와 시간 정보는 댓글이 언제 작성되었는지를 나타내며, 클라이언트는 이를 통해 댓글 목록을 정렬할 수 있습니다. -->
    </item>

    <item>
        <num>2</num>
        <!-- 두 번째 댓글 항목입니다. 이 댓글은 고유 번호 2번을 가지고 있습니다. 
        이 번호를 통해 클라이언트는 두 번째 댓글을 식별할 수 있습니다. -->
        <writer>
            <![CDATA[네오]]>
        </writer>
        <!-- 작성자의 이름은 "네오"이며, CDATA 섹션을 사용하여 저장되었습니다. 
        이 CDATA 섹션을 통해 네오라는 이름이 XML 파서에 의해 안전하게 처리됩니다. -->
        <content>
            <![CDATA[jQuery로 Ajax를 구현하면 매우 쉽습니다.]]>
        </content>
        <!-- 댓글의 내용은 "jQuery로 Ajax를 구현하면 매우 쉽습니다."입니다. 이 내용도 CDATA 섹션 안에 포함되어 있습니다. 
        특수문자나 한글이 포함된 문자열을 안전하게 처리하기 위해 CDATA 섹션이 사용되었습니다. -->
        <datetime>
            <![CDATA[2021-03-15 12:21:42]]>
        </datetime>
        <!-- 댓글이 작성된 날짜와 시간은 "2021-03-15 12:21:42"입니다. 
        이 정보는 댓글이 언제 작성되었는지 클라이언트에 제공하며, 댓글 목록의 정렬 기준이 될 수 있습니다. -->
    </item>

    <item>
        <num>3</num>
        <!-- 세 번째 댓글 항목입니다. 이 댓글은 고유 번호 3번을 가지고 있습니다. 
        고유 번호를 통해 클라이언트는 세 번째 댓글을 식별할 수 있습니다. -->
        <writer>
            <![CDATA[프로도]]>
        </writer>
        <!-- 작성자의 이름은 "프로도"입니다. CDATA 섹션을 사용하여 이름을 안전하게 저장했습니다. 
        CDATA 섹션은 이름에 포함된 특수문자나 한글을 안전하게 처리합니다. -->
        <content>
            <![CDATA[Hello jQuery~ Hello Ajax~]]>
        </content>
        <!-- 댓글의 내용은 "Hello jQuery~ Hello Ajax~"입니다. 특수문자(~)도 CDATA 섹션을 통해 안전하게 포함됩니다. 
        이 섹션을 통해 XML 파서가 특수문자를 그대로 처리할 수 있습니다. -->
        <datetime>
            <![CDATA[2021-03-15 12:21:42]]>
        </datetime>
        <!-- 이 댓글의 작성 날짜와 시간은 "2021-03-15 12:21:42"로 기록되어 있습니다. 
        클라이언트는 이 정보를 바탕으로 댓글 목록을 시간 순서대로 정렬할 수 있습니다. -->
    </item>
</comment>

<!-- 

CDATA Section
- <![CDATA[.....]]>
- CDATA Section 영역 안에서는 특수문자의 사용이 자유롭다.
- 한글을 포함한 문자열 데이터에 사용할 수 있다.

 CDATA 섹션은 XML에서 텍스트 데이터를 안전하게 포함시킬 수 있는 영역입니다. 
일반적으로 XML 파서는 `<`, `>`, `&`와 같은 특수문자를 해석하려고 하지만, CDATA 섹션 안에 있는 내용은 그대로 텍스트로 취급합니다. 
따라서 특수문자나 한글을 포함한 문자열 데이터를 XML 문서에 안전하게 저장할 수 있습니다. 
이 예제에서는 댓글 작성자의 이름과 댓글 내용을 CDATA 섹션으로 감싸 특수문자나 한글이 문제없이 저장될 수 있도록 했습니다. 
따라서 이 섹션 안의 데이터는 파서에 의해 해석되지 않고 그대로 유지됩니다. 
CDATA는 Character Data의 약자로, XML 문서에서 텍스트를 특수한 처리 없이 그대로 사용하고자 할 때 사용됩니다. 
파서는 CDATA 섹션의 내용을 해석하지 않고, 입력된 그대로를 출력합니다. 

MyBatis 에서 사용되는 구문 예시
<!<[CDATA[ SELECT * FROM 테이블 WHERE AGE < 20 ]]>

 -->
