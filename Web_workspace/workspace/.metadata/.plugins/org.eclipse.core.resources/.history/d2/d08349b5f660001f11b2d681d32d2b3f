<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>회원가입</title>
<!-- 외부 CSS 파일을 연결합니다. 전체적인 디자인 및 스타일링을 적용합니다. -->
<link rel="stylesheet" href="../css/event.css">
</head>
<body>

	<h1>회원가입</h1>
	<!-- 회원가입 폼: 사용자의 이름을 입력받고 저장/취소 버튼을 포함하는 폼입니다. -->
	<form name="form1" action="form_ok.html">
		<div id="input">
			<!-- 사용자의 이름을 입력받는 텍스트 필드입니다. -->
			<h3>당신의 이름은 무엇입니까?</h3>
				<input type="text" name="user_name"/>
				
				<!-- 저장 버튼: 폼을 제출하고, 지정된 URL로 이동합니다. -->
				<input type="submit" value="저장하기" class="myButton" />
				
				<!-- 취소 버튼: 폼을 초기화합니다. -->
				<input type="reset" value="다시작성" class="myButton"/>
		</div>
	</form>
	
<!-- jQuery 라이브러리를 외부 CDN에서 불러옵니다. 이를 통해 jQuery 이벤트 처리 기능을 사용할 수 있습니다. -->
<script type="text/javascript" src="http://code.jquery.com/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
$(function(){
	// 사용자가 폼을 제출하려고 할 때 발생하는 submit 이벤트를 처리합니다.
	$('form[name="form1"]').submit(function(){
		// 확인창을 띄워 사용자가 정말로 저장하고 싶은지 확인합니다.
		if (!confirm('정말로 저장하시겠습니까?')) {
			// 사용자가 취소를 누르면 폼 제출을 중단합니다.
			return false;
		}
		// 사용자가 확인을 누르면 폼이 제출되고 action에 설정된 페이지로 이동합니다.
	});
	
	// 사용자가 취소 버튼(리셋)을 클릭할 때 발생하는 reset 이벤트를 처리합니다.
	$('input[type="reset"]').click(function(){
		// 확인창을 띄워 사용자가 정말로 취소하고 싶은지 확인합니다.
		if (!confirm('정말로 취소하시겠습니까?')) {
			// 사용자가 취소를 누르면 폼 초기화를 중단합니다.
			return false;
		}
		// 사용자가 확인을 누르면 폼이 초기화됩니다.
	});
	
});
</script>
</body>
</html>

<!-- 

submit
=> 사용자가 폼을 제출하면 입력 상자의 데이터를 가지고 지정된 URL로 이동하게 됩니다.
   폼을 제출할 때 HTTP 메서드(GET 또는 POST)를 통해 데이터를 서버로 전송할 수 있습니다.

<form>
</form>
   잘못된 구조 예:
   - HTML에서는 <form> 태그 내에 다른 <form> 태그를 중첩할 수 없습니다. 이 구조는 잘못된 예입니다.

 -->
