<!DOCTYPE html> 
<html lang="en"> 
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0"> 
<title>Document</title>
<link rel="stylesheet" href="../css/common.css"> 
<link rel="stylesheet" href="../css/reset.css">
</head> 
<body>
<h1 class="title">동적 드롭다운</h1> 
<div class="exec">
<form>
<!-- 각 단계별 dropdown을 표시할 span태그 --> 
<span id="category1"></span> <!-- 1depth 카테고리가 로드될 위치. 드롭다운의 첫 번째 단계가 여기에 표시됩니다. -->
<span id="category2"></span> <!-- 2depth 카테고리가 로드될 위치. 첫 번째 단계 선택에 따라 여기에 두 번째 드롭다운이 표시됩니다. -->
<span id="category3"></span> <!-- 3depth 카테고리가 로드될 위치. 두 번째 단계 선택에 따라 세 번째 드롭다운이 여기에 표시됩니다. -->

</form> 
</div>
<div class="console"></div> <!-- 사용자가 선택한 카테고리 경로를 표시하는 콘솔. 선택된 항목들이 이곳에 표시됩니다. -->

<script src="http://code.jQuery.com/jquery-3.7.1.min.js"></script> 
<script>
$(function(){ 
// 1 depth 카테고리 로드
$('#category1').load('../text/category-data.html #category1-1', function(){ 
  // 1depth 카테고리 데이터를 서버에서 비동기적으로 불러옴.
  // category-data.html 파일에서 id가 #category1-1인 부분만을 불러와서 #category1 요소에 삽입함.
  // 이 작업은 페이지 로드 시 첫 번째 카테고리(1depth)를 표시하기 위함임.
  $(this).show(); // 불러온 후, 요소가 화면에 표시됨.
});

// 2depth 카테고리 로드
$(document).on('change', '#category1 > select', function(){ 
  // 1depth에서 사용자가 선택을 변경할 때 발생하는 이벤트.
  // 1depth 선택에 따라 2depth를 로드하기 위해 이벤트 리스너가 등록되어 있음.
  $('#category2, .console').empty(); // 2depth와 콘솔 영역을 초기화. 이전 선택 내용을 삭제함.
  $('#category3').empty(); // 3depth도 초기화. 선택에 따라 새로 로드될 예정이므로 초기화 필요.
  
  let target = $(this).find('option:selected').attr('data-target'); 
  // 사용자가 선택한 1depth 옵션의 'data-target' 속성 값을 가져옴.
  // 예: 의류 선택 시, data-target="#category2-1"이 반환됨.
  
  console.log('target = ' + target); // 개발자 도구 콘솔에 target 값을 출력하여 선택된 값이 올바르게 반영되었는지 확인할 수 있음.
  
  $('#category2').load('../text/category-data.html ' + target, function(){ 
    // 선택된 1depth 옵션에 맞는 2depth 카테고리를 서버에서 비동기적으로 불러옴.
    // 불러온 데이터를 #category2 요소에 삽입.
    $(this).show(); // 2depth 카테고리가 로드된 후 화면에 표시됨.
  }); 
});

// 3depth 카테고리 로드
$(document).on('change', '#category2 > select', function(){
  // 2depth에서 사용자가 선택을 변경할 때 발생하는 이벤트.
  // 2depth 선택에 따라 3depth를 로드하기 위해 이벤트 리스너가 등록되어 있음.
  $('#category3, .console').empty(); // 3depth와 콘솔 영역을 초기화. 이전 선택 내용을 삭제함.
  
  let target = $(this).find('option:selected').attr('data-target'); 
  // 사용자가 선택한 2depth 옵션의 'data-target' 속성 값을 가져옴.
  // 예: 여성의류 선택 시, data-target="#category2-1-1"이 반환됨.
  
  console.log('target = ' + target); // 개발자 도구 콘솔에 target 값을 출력하여 선택된 값이 올바르게 반영되었는지 확인할 수 있음.
  
  $('#category3').load('../text/category-data.html ' + target, function(){ 
    // 선택된 2depth 옵션에 맞는 3depth 카테고리를 서버에서 비동기적으로 불러옴.
    // 불러온 데이터를 #category3 요소에 삽입.
    $(this).show(); // 3depth 카테고리가 로드된 후 화면에 표시됨.
  });
});

// 최종 선택된 값 처리
$(document).on('change', '#category3 > select', function(){ 
  // 3depth에서 사용자가 선택을 변경할 때 발생하는 이벤트.
  // 3depth에서 최종적으로 선택된 값을 처리하기 위해 이벤트 리스너가 등록되어 있음.
  if($(this).find('option:selected').index() > 0) { 
    // 선택된 옵션의 인덱스가 0보다 클 경우 실행됨.
    // 즉, 기본 선택 옵션(----- 선택하세요 -----)이 아닌 경우에만 실행됨.
    
    // let data1 = $('#category1').find('option:selected').val();
    let data1 = $('#category1 > select > option:selected').val(); 
    // 선택된 1depth 카테고리의 값을 가져옴.
    
    let data2 = $('#category2 > select > option:selected').val(); 
    // 선택된 2depth 카테고리의 값을 가져옴.
    
    let data3 = $('#category3 > select > option:selected').val(); 
    // 선택된 3depth 카테고리의 값을 가져옴.
    
    $('.console').html(data1 + ' &gt; ' + data2 + ' &gt; ' + data3);
    // 선택된 카테고리 경로를 콘솔 영역에 출력함.
    // 예: '의류 > 여성의류 > 티셔츠'와 같은 형식으로 경로를 출력함.
    // '>' 기호 대신 &gt;를 사용하여 HTML에서 올바르게 표시되도록 처리함.
  } 
});
}); 
</script>
</body> 
</html>

<!-- 
* load()
읽어오고자 하는 대상의 내용이 단순한 text나 html 태그를 표현하며 
읽어온 내용을 특정 요소에 출력하는 것만을 목적으로 할 경우 load() 함수를 사용해 코드를 축약할 수 
있다.
$("CSS셀렉터").load(
"읽어올 대상의 URL" 
[, function() { ...읽기에 성공한 후 실행될 함수...}] 
);
예) "readme.html" 파일의 전체 내용 중에서 "#my"라는 id값을 갖는 요소만을 읽어올 경우 
$("출력할 대상의 셀렉터").load("readme.html #my");
-->
