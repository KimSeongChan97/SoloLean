<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import="java.sql.*" %>
<%@ page import="javax.naming.InitialContext" %>
<%@ page import="javax.sql.DataSource" %>

<%
    request.setCharacterEncoding("UTF-8");

    String commentContent = request.getParameter("commentContent");
    int boardSeq = Integer.parseInt(request.getParameter("boardSeq"));
    String sessionName = (String) session.getAttribute("memName");  // 로그인된 사용자의 이름

    // Connection pool을 통한 데이터베이스 연결
    Connection conn = null;
    PreparedStatement pstmt = null;

    try {
        // InitialContext를 통해 context.xml에서 설정한 DataSource 가져오기
        InitialContext ic = new InitialContext();
        DataSource ds = (DataSource) ic.lookup("java:comp/env/jdbc/oracle");

        // Connection Pool에서 Connection 얻기
        conn = ds.getConnection();

        // 댓글을 데이터베이스에 저장하는 SQL 문 (comment_id는 시퀀스를 통해 자동 생성)
        String sql = "INSERT INTO comments (comment_id, boardSeq, name, content, logtime) VALUES (seq_comments.NEXTVAL, ?, ?, ?, SYSDATE)";
        pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, boardSeq);          // 게시글 번호
        pstmt.setString(2, sessionName);    // 세션에서 가져온 사용자 이름
        pstmt.setString(3, commentContent); // 댓글 내용
        pstmt.executeUpdate();

    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        if (pstmt != null) pstmt.close();
        if (conn != null) conn.close();  // Connection 반환
    }

    // 댓글 작성 후 다시 게시글 보기 페이지로 리다이렉트
    response.sendRedirect("boardView.jsp?seq=" + boardSeq);
%>
