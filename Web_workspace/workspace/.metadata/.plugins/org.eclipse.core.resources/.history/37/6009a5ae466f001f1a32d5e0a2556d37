package board.dao;

import java.io.IOException;
import java.io.Reader;
import java.util.List;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import board.bean.CommentDTO;

public class CommentDAO {
    private static CommentDAO instance = new CommentDAO();
    private SqlSessionFactory sqlSessionFactory;

    // 1. MyBatis 설정 파일을 읽어 SqlSessionFactory 초기화
    public CommentDAO() {
        try {
            Reader reader = Resources.getResourceAsReader("mybatis-config.xml");
            sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // 2. 싱글톤 인스턴스를 반환하는 메소드
    public static CommentDAO getInstance() {
        return instance;
    }

    // 3. 댓글 작성하기
    public void addComment(CommentDTO commentDTO) {
        SqlSession sqlSession = sqlSessionFactory.openSession();
        try {
            sqlSession.insert("commentSQL.addComment", commentDTO);
            sqlSession.commit();
        } finally {
            sqlSession.close();
        }
    }

    // 4. 특정 게시물의 댓글 리스트 가져오기
    public List<CommentDTO> getComments(int boardSeq) {
        SqlSession sqlSession = sqlSessionFactory.openSession();
        List<CommentDTO> list = null;
        try {
            list = sqlSession.selectList("commentSQL.getComments", boardSeq);
        } finally {
            sqlSession.close();
        }
        return list;
    }

    // 5. 댓글 수정하기
    public void updateComment(CommentDTO commentDTO) {
        SqlSession sqlSession = sqlSessionFactory.openSession();
        try {
            sqlSession.update("commentSQL.updateComment", commentDTO);
            sqlSession.commit();
        } finally {
            sqlSession.close();
        }
    }

    // 6. 댓글 삭제하기
    public void deleteComment(int commentSeq) {
        SqlSession sqlSession = sqlSessionFactory.openSession();
        try {
            sqlSession.delete("commentSQL.deleteComment", commentSeq);
            sqlSession.commit();
        } finally {
            sqlSession.close();
        }
    }
}
