<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>배열-concat</title>
</head>
<body>

	<script type="text/javascript">
		// concat : 배열 합치기, 새로운 배열이 생성, 원본은 변경X (변경하려면 concat으로 복사하고 복사본에 변경)
		// concat() 메소드는 기존 배열을 변경하지 않고, 새로운 배열을 반환하여 두 배열을 합칩니다.
		let arr1 = [ 10, 20, 30 ]; // 숫자 요소로 이루어진 배열 arr1 선언
		let arr2 = [ "사과", "딸기", "바나나" ]; // 문자열 요소로 이루어진 배열 arr2 선언
		let arr3 = arr1.concat(); // arr1의 복사본을 생성. 이로 인해 arr1은 변경되지 않음
		let arr4 = arr1.concat(arr2); // arr1과 arr2를 합쳐 새로운 배열 arr4를 생성

		console.log("arr1 = " + arr1); // arr1의 내용을 콘솔에 출력
		document.write("arr1 = " + arr1 + "<br>"); // arr1의 내용을 HTML 문서에 출력
		document.write(`arr3 = ${arr3}<br>`); // arr3의 내용을 HTML 문서에 출력 (arr1의 복사본)
		document.write(`arr4 = ${arr4}<br>`); // arr4의 내용을 HTML 문서에 출력 (arr1과 arr2를 합친 배열)
		document.write("<hr/>"); // 구분선을 추가하여 시각적으로 나누기

		//join - 배열을 문자열로 만든다
		let str1 = arr1.join();
		document.write(`str1 = ${str1}<br>`);
		
		let str2 = arr1.join("|"); // 배열요소 사이에 구분자(|)를 넣어서 문자열로 만든다.
		document.write(`str2 = ${str2}<br>`);
		document.write("<hr/>");
		// 배열 요소 추가
		// push : 배열의 요소를 배열의 끝에 추가 (원본 배열이 수정됨)
		// push()는 원본 배열의 마지막에 하나 이상의 요소를 추가하고, 배열의 새 길이를 반환합니다.
		// push를 많이 사용한다.. (append 도 있긴 하다.) → append는 DOM 요소에 더 많이 사용됩니다.
		arr1.push(40); // arr1의 끝에 40을 추가
		arr1.push(50); // arr1의 끝에 50을 추가
		document.write(`arr1 = ${arr1}<br>`); // 배열 arr1의 현재 상태를 출력 (40과 50이 추가됨)

		// 배열 arr2의 끝에 "복숭아", "수박"을 추가
		arr2.push("복숭아", "수박");
		document.write(`arr2 = ${arr2}<br>`); // 배열 arr2의 현재 상태를 출력 ("복숭아", "수박"이 추가됨)

		document.write("<hr/>");

		// unshift : 배열의 요소를 배열의 시작 부분에 추가 (원본 배열이 수정됨)
		// unshift()는 배열의 시작 부분에 하나 이상의 요소를 추가하고, 배열의 새 길이를 반환합니다.
		arr2.unshift("망고"); // arr2의 맨 앞에 "망고" 추가
		document.write(`arr2 = ${arr2}<br>`); // 배열 arr2의 현재 상태를 출력 (맨 앞에 "망고" 추가됨)
		document.write("<hr/>");

		// 배열 요소 꺼낸다
		// pop : 배열의 마지막 요소를 제거하고 그 값을 반환 (원본 배열이 수정됨)
		// pop()은 배열의 마지막 요소를 제거하고 그 값을 반환합니다. 원본 배열이 수정됩니다.
		arr1.pop(); // 배열 arr1의 마지막 요소를 제거 (50이 제거됨)
		document.write(`arr1 = ${arr1}<br>`); // 배열 arr1의 현재 상태를 출력 (50이 제거된 상태)

		let num = arr1.pop(); // 배열 arr1의 마지막 요소를 제거하고, 그 값을 변수 num에 저장
		document.write(`num = ${num}<br>`); // 제거된 요소 (40)를 출력
		document.write(`arr1 = ${arr1}<br>`); // 배열 arr1의 현재 상태를 출력 (40도 제거된 상태)
		document.write("<hr/>");

		// shift : 배열의 첫 번째 요소를 제거하고 그 값을 반환 (원본 배열이 수정됨)
		// shift()는 배열의 첫 번째 요소를 제거하고 그 값을 반환합니다. 원본 배열이 수정됩니다.
		let str = arr2.shift(); // 배열 arr2의 첫 번째 요소를 제거하고, 그 값을 변수 str에 저장
		document.write(`str = ${str}<br>`); // 제거된 요소 ("망고")를 출력
		document.write(`arr2 = ${arr2}<br>`); // 배열 arr2의 현재 상태를 출력 (첫 번째 요소 제거됨)
		document.write("<hr/>");

		// splice() : 배열 요소를 추가/삭제하는 역할. 원본 배열을 변경합니다.
		// splice()는 배열의 기존 요소를 삭제하거나, 새로운 요소를 추가하여 배열을 수정할 수 있습니다.
		let arr5 = arr2.splice(2); // 인덱스 2부터 끝까지 배열 요소를 삭제하고 그 삭제된 요소들을 반환
		document.write(`arr2 = ${arr2}<br>`); // 배열 arr2의 현재 상태를 출력 (인덱스 2부터 제거된 상태)
		document.write(`arr5 = ${arr5}<br>`); // 제거된 요소를 반환한 arr5 출력

		let arr6 = arr5.splice(1, 1); // 인덱스 1에서 1개의 요소를 제거
		document.write(`arr5 = ${arr5}<br>`); // 배열 arr5의 현재 상태를 출력 (인덱스 1의 요소 제거)
		document.write(`arr6 = ${arr6}<br>`); // 제거된 요소를 출력 (1개의 요소)

		let arr7 = arr5.splice(1, 0, "멜론"); // 인덱스 1에 "멜론"을 추가 (삭제된 요소는 없음)
		document.write(`arr5 = ${arr5}<br>`); // 배열 arr5의 현재 상태를 출력 ("멜론" 추가됨)
		document.write(`arr7 = ${arr7}<br>`); // 값이 없으므로 빈 배열 출력
		document.write("<hr/>");

		// slice() : 배열 요소를 꺼내옵니다. 원본 배열은 변경되지 않습니다.
		// slice()는 배열의 일부를 추출하여 새로운 배열로 반환합니다. 원본 배열은 변경되지 않습니다.
		let arr8 = arr1.concat(40, 50, 60); // arr1에 40, 50, 60을 추가한 새로운 배열 arr8 생성
		document.write(`arr1 = ${arr1}<br>`); // 원본 배열 arr1은 그대로 유지됨
		document.write(`arr8 = ${arr8}<br>`); // arr1에 40, 50, 60이 추가된 배열 arr8 출력

		let arr9 = arr8.slice(4); // 인덱스 4부터 끝까지 요소를 추출하여 새로운 배열 생성
		document.write(`arr8 = ${arr8}<br>`); // 원본 배열 arr8은 변경되지 않음
		document.write(`arr9 = ${arr9}<br>`); // 인덱스 4부터 추출된 새로운 배열 arr9 출력

		let arr10 = arr8.slice(2, 4); // 인덱스 2부터 인덱스 3까지 추출하여 새로운 배열 생성
		document.write(`arr8 = ${arr8}<br>`); // 원본 배열 arr8은 변경되지 않음
		document.write(`arr10 = ${arr10}<br>`); // 인덱스 2부터 3까지 추출된 새로운 배열 arr10 출력
		document.write("<hr/>");
	</script>
</body>
</html>

<!-- 

함수들에 대한 자세한 설명

concat() : 배열을 합치고 새로운 배열을 반환. 원본 배열은 변경되지 않음.
push() : 배열의 끝에 요소를 추가하고 배열의 길이를 반환. 원본 배열이 변경됨.
unshift() : 배열의 앞에 요소를 추가하고 배열의 길이를 반환. 원본 배열이 변경됨.
pop() : 배열의 마지막 요소를 제거하고 그 값을 반환. 원본 배열이 변경됨.
shift() : 배열의 첫 번째 요소를 제거하고 그 값을 반환. 원본 배열이 변경됨.
splice() : 배열의 요소를 추가/삭제하여 배열을 수정. 원본 배열이 변경됨.
slice() : 배열의 일부를 추출하여 새로운 배열을 반환. 원본 배열은 변경되지 않음.

-->
