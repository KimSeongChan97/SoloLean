<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style type="text/css">

* { 
  padding: 0;
  margin: 0; 
 }

/* #container는 페이지 가운데에 위치하며, 너비는 500px로 고정됩니다. */
#container { 
    width: 500px;
    margin: 20px auto;  /* 위아래 여백은 20px, 좌우는 자동으로 설정하여 가운데 정렬 */
}

/* ul.tab는 탭 메뉴를 구성하는 리스트입니다. 기본적인 목록 스타일을 없애고, 탭이 겹치지 않도록 z-index를 설정합니다. */
ul.tab {
    list-style: none;  /* 불필요한 기본 목록 스타일 제거 */
    position: relative;
    z-index: 100;  /* 탭 목록이 다른 요소들보다 위에 위치하도록 설정 */
}

/* ul.tab li는 각 탭을 정의합니다. 각 탭의 크기를 고정하고, 가로로 나열합니다. */
ul.tab li {
    width: 100px;
    height: 40px;
    float: left;  /* 목록을 가로로 나열하기 위해 좌측으로 정렬 */
}

/* ul:after는 ul의 하위 요소들이 float로 인해 흐름에서 벗어나지 않도록 요소의 높이를 자동으로 계산해줍니다. */
ul:after {
    content: '';  /* 가상 요소를 생성 */
    display: block;
    float: none;
    clear: both;  /* float 해제를 통해 부모 요소가 자식 요소의 높이를 감쌀 수 있도록 합니다. */
}

/* ul.tab li a는 각 탭의 링크 스타일을 정의합니다. 탭의 배경 이미지와 텍스트를 가운데에 정렬합니다. */
ul.tab li a {
    background: url("../image/tab.jpg");  /* 탭의 기본 배경 이미지를 설정 */
    display: block;  /* 링크 요소를 블록으로 설정하여 너비와 높이를 지정할 수 있게 합니다. */
    color: #222;  /* 텍스트 색상 설정 */
    line-height: 40px;  /* 텍스트를 수직으로 가운데 정렬 */
    text-align: center;  /* 텍스트를 가로로 가운데 정렬 */
    text-decoration: none;  /* 텍스트의 밑줄 제거 */
}

/* ul.tab li a.selected는 선택된 탭의 스타일을 정의합니다. 배경 이미지를 변경하여 선택된 상태를 시각적으로 구분합니다. */
ul.tab li a.selected {
    background: url("../image/tab_selected.jpg");  /* 선택된 탭의 배경 이미지를 설정 */
}

/* p.panel은 탭에 해당하는 내용이 출력되는 영역입니다. */
p.panel {
    border: 1px solid #9FB7D4;  /* 내용 영역의 테두리를 설정 */
    position: relative;
    padding: 10px;  /* 내용 영역 내부 여백을 설정 */
    margin: 0;  /* 외부 여백을 없앰 */
    top: -1px;  /* 테두리의 시각적 일관성을 위해 상단 위치를 약간 조정 */
}

</style>
</head>
<body>

	<div id="container">
	<!-- 탭 버튼 영역 -->
	<!-- 탭 버튼을 구성하는 목록입니다. 각 항목은 다른 파일로 연결됩니다. -->
	<ul class="tab">
		<!-- HTML5 탭, 기본적으로 선택된 상태로 설정되어 있음 -->
		<li><a href="../txt/html5.txt" class="selected">HTML5</a></li>
		<!-- jQuery 탭 -->
		<li><a href="../txt/jquery.txt" >jQuery</a></li>
		<!-- Bootstrap3 탭 -->
		<li><a href="../txt/bootstrap.txt" >Bootstrap3</a></li>
	</ul>
	
	<!-- 내용 영역 -->
	<!-- 선택된 탭에 해당하는 파일의 내용이 여기에 표시됩니다. -->
	<p class="panel">파일로부터 읽어드린 내용 출력 </p>
	
	</div>

<!-- jQuery 라이브러리를 불러옵니다. 이 버전은 3.7.1입니다. -->
<script type="text/javascript" src="http://code.jquery.com/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
$(function(){
	// class="selected" 클래스 속성에서 selected 로 설정된 파일의 내용을 읽어오기
	// 처음 페이지 로드 시에 선택된 탭 (HTML5)의 파일 경로를 콘솔에 출력
	console.log( $('.selected').attr('href') ); // ../txt/html5.txt
	// 위와 동일하게 선택된 탭의 파일 경로를 출력하되, 더 구체적인 선택자를 사용하여 접근
	console.log( $('ul.tab > li > a.selected').attr('href') ); // ../txt/html5.txt
	
	// 처음 페이지가 로드되면 선택된 탭의 내용을 읽어와서 <p class="panel"> 영역에 출력합니다.
	$('p.panel').load($('ul.tab > li > a.selected').attr('href'));
	
	// 각 탭 버튼을 클릭했을 때의 동작을 정의
	$('ul.tab > li > a').click(function(){
		// this는 클릭된 요소(a 태그)를 가리킵니다.
		console.log('this = ' + this); // this = http://localhost:8080/jQuery/txt/bootstrap.txt
		// $(this)는 클릭된 요소를 jQuery 객체로 변환한 것입니다.
		console.log('$(this) = ' + $(this)); // $(this) = [object Object]
		
		// 클릭한 요소를 제외한 나머지 탭에서 class="selected" 속성을 제거합니다.
		$('ul.tab > li > a').not(this).removeClass('selected');
		
		// 클릭한 요소에 class="selected" 속성을 추가하여 선택된 상태로 만듭니다.
		$(this).attr('selected');  // 주의: 이 부분은 오타로 보입니다. attr('selected')가 아니라 addClass('selected')가 되어야 할 것 같습니다.
		
		// 클릭한 탭의 href 속성에 있는 파일 경로를 읽어와서 <p class="panel"> 영역에 출력합니다.
		$('p.panel').load($(this).attr('href'));
		
		// 기본적인 링크의 동작을 막기 위해 false를 반환합니다.
		return false;
	});
	
});
</script>
</body>
</html>

<!-- 

파일의 내용을 읽어오는 함수 => load()

.not()
제이쿼리로 선택한 선택자(요소)들 중에서, 특정 선택자(요소)만을 제외하는 함수

this / $(this)
=> this는 자바스크립트이고 $(this) 제이쿼리 문법이다.
=> this의 경우 해당 이벤트가 발생한 요소를 표시해주고
   $(this)는 이벤트가 발생하면 발생한 태그를 Object로 보여준다는게 다른점이다.
=> this와 같은 데이터를 갖기 위해서는 $(this)[0] 을 사용하면 된다.
   this === $(this)[0]


 -->

