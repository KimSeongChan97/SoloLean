// 중복체크 여부를 확인하는 변수
let idChecked = false;

// ID 중복체크
function checkId() {
    let id = document.getElementById('id').value;

    if (id === '') {
        document.getElementById('idDiv').innerHTML = "먼저 아이디를 입력하세요 !!";
    } else {
        window.open("./checkId.jsp?id=" + id, "myWindow", "width=450 height=150 top=100 left=800");
        idChecked = true; // 중복체크가 완료되었음을 설정
    }
}

// 아이디 변경 시 중복체크를 다시 해야 함
document.getElementById('id').addEventListener('input', function () {
    idChecked = false; // 아이디가 변경되면 중복체크 상태를 초기화
});

// 이름 유효성 검사 함수
function validateName() {
    let name = document.getElementById("name").value;

    // 이름이 비어있는지 확인
    if (name.trim() === "") {
        document.getElementById("nameDiv").innerHTML = "이름을 입력해주세요.";
        return false;
    }

    // 이름에 숫자나 특수 문자가 포함되지 않도록 검사
    let namePattern = /^[가-힣a-zA-Z\s]+$/;
    if (!namePattern.test(name)) {
        document.getElementById("nameDiv").innerHTML = "이름에는 숫자나 특수문자를 포함할 수 없습니다.";
        return false;
    }

    // 유효한 경우 오류 메시지를 지우고, true 반환
    document.getElementById("nameDiv").innerHTML = "";
    return true;
}

// 비밀번호 유효성 검사 함수
function validatePassword() {
    var pwd = document.getElementById("pwd").value; // 비밀번호 필드 값 가져오기
    var repwd = document.getElementById("repwd").value; // 비밀번호 재입력 필드 값 가져오기

    // 비밀번호 길이 검사 (최소 3자 이상이어야 함)
    if (pwd.length < 3) {
        document.getElementById("pwDiv").innerHTML = "비밀번호는 최소 3자 이상이어야 합니다.";
        return false;
    }

    // 비밀번호 일치 여부 검사
    if (pwd !== repwd) {
        document.getElementById("pwDiv").innerHTML = "비밀번호가 일치하지 않습니다.";
        return false;
    }

    // 비밀번호 복잡도 검사 (숫자와 특수문자 포함)
    var pwdPattern = /^(?=.*[0-9])(?=.*[!@#$%^&*])/;
    if (!pwdPattern.test(pwd)) {
        document.getElementById("pwDiv").innerHTML = "비밀번호는 숫자와 특수문자를 포함해야 합니다.";
        return false;
    }

    // 모든 유효성 검사를 통과한 경우
    document.getElementById("pwDiv").innerHTML = ""; // 오류 메시지를 지움
    return true;
}

// 폼 유효성 검사 함수
function validateForm() {
    // 이름 유효성 검사
    if (!validateName()) {
        return false;
    }

    // 아이디 중복 체크 확인
    if (!idChecked) {
        alert("아이디 중복체크를 완료해주세요.");
        return false; // 아이디 중복 체크가 안 되었으면 제출을 막음
    }

    // 비밀번호 유효성 검사 통과 여부 확인
    if (!validatePassword()) {
        return false;
    }

    // 이메일 유효성 검사 추가
    var email1 = document.getElementById("email1").value;
    var email2 = document.getElementById("email2").value;

    var fullEmail = email1 + "@" + email2;
    var emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

    if (!emailPattern.test(fullEmail)) {
        alert("유효한 이메일 주소를 입력하세요.");
        return false;
    }

    return true; // 모든 유효성 검사를 통과하면 폼을 제출
}

// 우편번호: Daum API
function checkPost() {
    new daum.Postcode({
        oncomplete: function (data) {
            var addr = '';

            if (data.userSelectedType === 'R') {
                addr = data.roadAddress; /* 사용자가 도로명 주소를 선택한 경우 */
            } else {
                addr = data.jibunAddress; /* 사용자가 지번 주소를 선택한 경우 */
            }

            document.getElementById('zipcode').value = data.zonecode; /* 선택한 우편번호를 해당 필드에 입력 */
            document.getElementById("addr1").value = addr; /* 선택한 주소를 주소 필드에 입력 */
            document.getElementById("addr2").focus(); /* 상세주소 필드로 포커스 이동 */
        }
    }).open(); /* 우편번호 검색 팝업 열기 */
}
