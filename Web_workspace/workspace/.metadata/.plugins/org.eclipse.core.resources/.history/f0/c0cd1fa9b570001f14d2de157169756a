<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.util.List"%>
<%@page import="com.jstl.PersonDTO"%>

<%
    // 자바 역할
    List<String> list = new ArrayList<String>();
    // ArrayList 객체를 생성하고, List 인터페이스 타입으로 참조합니다.
    // ArrayList는 크기가 동적으로 변하며, 여러 요소를 저장할 수 있는 자료구조입니다.
    
    list.add("호랑이");
    list.add("사자");
    list.add("기린");
    list.add("코끼리");
    list.add("타조");
    list.add("코알라");
    list.add("여우");    
    // List에 동물 이름을 추가합니다. 이 리스트는 '호랑이', '사자' 등의 동물 이름을 포함하는 문자열 목록입니다.
    
    PersonDTO aa = new PersonDTO("홍길동",25);
    PersonDTO bb = new PersonDTO("라이언",23);
    PersonDTO cc = new PersonDTO("프로도",30);
    
    // list2 에는 PersonDTO@주소 가 담긴다. (data는 아직 포함되어 있지 않다.)
    List<PersonDTO> list2 = new ArrayList<PersonDTO>();
    list2.add(aa);
    list2.add(bb);
    list2.add(cc);
        
    
    // submit, button을 통해서는 절대로 객체를 넘길 수 없다.
    // 넘어가는 데이터는 문자열(String)만 가능하다. 
    // -> 넘기려면 Session 객체인데, Session은 너무 많이 사용하면 안된다.
    // JSP에서는 request나 response 객체를 통해 데이터를 넘길 수 있습니다.
    // request 객체에 저장할 수 있는 데이터는 주로 문자열이지만, 객체도 넘길 수 있습니다.
    // 그러나 submit이나 버튼을 통해서는 직접적으로 객체를 전달할 수 없습니다.
    // 데이터를 넘길 때는 세션을 사용할 수도 있지만, 세션은 과도하게 사용하면 성능에 부정적인 영향을 미칠 수 있습니다.

    request.setAttribute("list", list);
    // request scope에 'list'라는 이름으로 list 객체를 저장합니다. 
    // 이 데이터는 forward로 다른 JSP 페이지로 이동할 때도 공유됩니다.
    request.setAttribute("list2", list2);
    
    
    // forward로 페이지 이동
    // forward는 서버 내부에서 요청을 전달하며, request와 response 객체를 유지합니다.
    // 따라서 'list'에 저장된 데이터는 forwardEnd.jsp에서도 사용할 수 있습니다.
    
%>    
<jsp:forward page="forwardEnd.jsp" />
<!-- 
    forward를 사용하여 'forwardEnd.jsp' 페이지로 요청을 전달합니다.
    클라이언트는 forward 과정을 알지 못하며, 요청은 서버 내부에서 처리됩니다.
    forward는 request 객체에 저장된 데이터를 유지한 채 다른 페이지로 전달하므로, forwardEnd.jsp에서 해당 데이터를 사용할 수 있습니다.
 -->