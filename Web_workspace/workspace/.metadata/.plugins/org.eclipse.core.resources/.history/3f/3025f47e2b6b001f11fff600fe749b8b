// 회원가입 함수
function memberWrite(){
	document.getElementById("nameDiv").innerHTML = "";
	document.getElementById("idDiv").innerHTML = "";
	document.getElementById("pwdDiv").innerHTML = "";
	// if(document.getElementById("name").value == "") // id 속성으로 중복 검사
	if(document.memberForm.name.value == "") // name  속성
		document.getElementById("nameDiv").innerHTML = "이름 입력하세요";
	else if(document.getElementById("id").value == "")	
		document.getElementById("idDiv").innerHTML = "아이디 입력하세요";
	else if(document.getElementById("pwd").value == "")	
			document.getElementById("pwdDiv").innerHTML = "비밀번호 입력하세요";
	else if(document.getElementById("pwd").value != document.getElementById("repwd").value)	
			document.getElementById("pwdDiv").innerHTML = "비밀번호가 맞지 않습니다.";	
	else if(document.getElementById("id").value != document.getElementById("check").value)
		document.getElementById("idDiv").innerHTML = "중복체크 하세요";
	else
	 document.memberForm.submit();		
};



// 중복체크 여부를 확인하는 변수
// 아이디 중복 체크가 완료되었는지 여부를 저장하는 변수입니다.
// 'false'는 아직 중복 체크가 안된 상태이고, 'true'는 중복 체크가 완료된 상태를 나타냅니다.
// 'idChecked' 변수는 중복체크 버튼을 눌렀는지 확인하는 역할을 합니다.
// 이 변수를 통해 폼 제출 시 중복 체크가 되었는지 검사하여 아이디가 유효한지 확인할 수 있습니다.
let idChecked = false;

// ID 중복 체크 함수
// 사용자가 입력한 아이디가 중복되었는지 확인하는 함수입니다.
// 이 함수는 중복 체크 버튼을 클릭했을 때 호출됩니다.
// 'checkId' 함수는 사용자 입력을 기반으로 서버에 요청을 보내어 아이디 중복 여부를 확인합니다.
// 사용자가 아무런 아이디를 입력하지 않으면 메시지를 표시하고, 입력이 있으면 중복 여부를 확인하는 팝업 창을 띄웁니다.
function checkId() {
    // 사용자가 입력한 아이디 값을 가져옵니다.
    let id = document.getElementById('id').value;

    // 아이디 입력이 비어있다면, 사용자에게 아이디를 입력하라는 메시지를 보여줍니다.
    // 'if' 조건문을 사용해 아이디 입력란이 비어있는지 확인합니다.
    // 비어 있으면 사용자에게 경고 메시지를 띄우고, 비어 있지 않다면 서버에 중복 체크를 요청하는 새로운 창을 엽니다.
    if (id === "") {
        document.getElementById('idDiv').innerHTML = "먼저 아이디를 입력하세요 !!";
    } else {
        // 입력한 아이디를 기반으로 중복 확인 팝업 창을 엽니다.
        // 여기서 'window.open' 함수는 새로운 브라우저 창을 엽니다.
        // 이 창은 'checkId.jsp'로 요청을 보내어 서버 측에서 아이디 중복 여부를 확인하는 역할을 합니다.
        // 'id' 값을 쿼리스트링으로 전달하여 중복 여부를 확인합니다.
        window.open("./checkId.jsp?id=" + id, "myWindow", "width=450 height=150 top=100 left=800");
        // 중복 체크가 완료되었음을 표시하기 위해 'idChecked' 변수를 'true'로 변경합니다.
        // 사용자가 중복 체크 버튼을 클릭했으므로, 중복 확인이 완료되었다고 표시하기 위해 'idChecked' 값을 'true'로 설정합니다.
        idChecked = true;
    }
}

// 아이디 변경 시 중복 체크 상태를 초기화하는 코드
// 사용자가 아이디 입력란에 새로운 값을 입력할 때마다 중복 체크 상태를 초기화합니다.
// 사용자가 아이디 입력을 수정하는 순간, 이전에 중복 체크한 값이 무효화되므로 'idChecked'를 다시 'false'로 설정해줍니다.
// 이렇게 해야 사용자가 아이디를 변경한 후 다시 중복 체크를 할 수 있습니다.
document.getElementById('id').addEventListener('input', function () {
    // 아이디가 변경되면 다시 중복 체크를 해야 하므로 'false'로 설정합니다.
    // 이 코드는 사용자가 입력할 때마다 호출되며, 중복 체크가 완료되지 않은 상태를 표시하기 위해 'idChecked'를 'false'로 설정합니다.
    idChecked = false;
});

// 우편번호 검색을 위한 Daum API 함수
// 사용자가 우편번호 검색 버튼을 클릭했을 때 호출됩니다.
// Daum API를 사용하여 주소를 검색하고, 사용자가 선택한 주소를 입력 필드에 자동으로 채워줍니다.
function checkPost() {
    new daum.Postcode({
        oncomplete: function (data) {
            // 사용자가 선택한 주소를 저장할 변수
            var addr = '';

            // 사용자가 도로명 주소를 선택했을 때와 지번 주소를 선택했을 때를 구분하여 주소를 저장합니다.
            // 도로명 주소와 지번 주소 중 사용자가 선택한 값을 저장합니다.
            if (data.userSelectedType === 'R') {
                addr = data.roadAddress; // 도로명 주소
            } else {
                addr = data.jibunAddress; // 지번 주소
            }

            // 선택한 우편번호와 주소를 각 필드에 넣습니다.
            // 'zipcode'와 'addr1' 필드에 자동으로 값을 채워주고, 상세 주소를 입력할 수 있도록 포커스를 이동시킵니다.
            document.getElementById('zipcode').value = data.zonecode; // 우편번호
            document.getElementById("addr1").value = addr; // 주소
            document.getElementById("addr2").focus(); // 상세주소 입력란으로 포커스를 이동합니다.
        }
    }).open(); // 우편번호 검색 팝업을 엽니다.
}
