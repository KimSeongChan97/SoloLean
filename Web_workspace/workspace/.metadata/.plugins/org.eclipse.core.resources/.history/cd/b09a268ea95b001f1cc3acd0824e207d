<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>WebPage만들어보기</title>
  <!-- main.css 파일을 불러옵니다. 해당 파일에는 웹페이지의 스타일이 정의되어 있습니다. -->
  <link rel="stylesheet" href="./main.css">
</head>
<body>
  <!-- .skip 요소는 스크린 리더 사용자나 키보드만 사용하는 사용자가 반복적인 메뉴 항목을 건너뛰고 바로 본문으로 이동할 수 있도록 도와줍니다. -->
  <dl class="skip">
    <dt class="blind">skip naigation</dt>
    <!-- "blind" 클래스는 시각적으로 보이지 않도록 설정되었으나, 스크린 리더에는 내용을 전달합니다. -->
    <dd>
      <a href="#content">skip to content</a> <!-- 이 링크는 사용자가 클릭하면 본문으로 바로 이동할 수 있도록 합니다. -->
    </dd>
  </dl>
  <!-- //skip -->
  <hr /> <!-- 시각적으로 구분되는 선을 의미합니다. 디자인적으로 숨겨졌지만 시각 장애 사용자에게는 중요한 구분점입니다. -->
  
  <div id="wrap">
    <div id="header">
      <!-- .logo 요소는 로고를 나타내며, 시각적으로 로고 이미지를 보여줍니다. -->
      <h1 class="logo">
        <a href="#">LOGO</a> <!-- 실제로 링크가 없는 샘플 코드이므로 "#"을 사용하였습니다. -->
      </h1>

      <!-- topnav는 페이지 상단에 위치한 탐색 메뉴입니다. -->
      <dl class="topnav">
        <!-- 시각 장애인을 위한 설명을 추가하여 top navigation이라고 알립니다. -->
        <dt class="blind">top navigation</dt>
        <dd>
          <a href="#">Login</a> <!-- 사용자 로그인 링크 -->
        </dd>
        <dd>
          <a href="#">Member join</a> <!-- 회원가입 링크 -->
        </dd>
        <dd>
          <a href="#">Sitemap</a> <!-- 사이트맵 링크 -->
        </dd>
      </dl>

      <!-- main navigation은 웹사이트의 주요 메뉴를 제공합니다. -->
      <h2 class="blind">main navigation</h2>
      <ul class="mainnav">
        <li><a href="#">About</a></li> <!-- 각 항목은 웹사이트의 다른 페이지로 연결됩니다. -->
        <li><a href="#">Services</a></li>
        <li><a href="#">Portfolio</a></li>
        <li><a href="#">Contact us</a></li>
      </ul>
    </div>
    <!-- header 끝 -->
    <hr />

    <div id="container">
      <!-- .snb는 서브 내비게이션 메뉴를 나타내며, 보통 추가적인 정보나 페이지로 이동할 수 있는 메뉴를 포함합니다. -->
      <div class="snb">
        <h2>About</h2> <!-- 섹션 제목 -->
        <ul>
          <li><a href="#">Company Info</a></li> <!-- 각 링크는 회사 정보, 역사, 위치 등 세부 페이지로 연결됩니다. -->
          <li><a href="#">History</a></li>
          <li><a href="#">Location</a></li>
        </ul>
      </div>
      <!-- snb 끝 -->
      <hr />

      <div id="content">
        <!-- .locate 요소는 현재 사용자가 위치한 페이지의 경로를 표시하는 데 사용됩니다. -->
        <p class="locate">
          <a href="#">Home</a> &gt; <!-- Home 페이지로 이동하는 링크 -->
          <a href="#">About</a> &gt; <!-- About 페이지로 이동하는 링크 -->
          <strong>Company Info</strong> <!-- 현재 페이지를 강조하여 표시합니다. -->
        </p>
        
        <h2>Company Info</h2>
        <p class="thum">
          <img src="../image/treethum.png" alt="tree thumnail photo"> <!-- 회사를 설명하는 이미지. alt 속성은 이미지가 로딩되지 않을 때 설명을 제공합니다. -->
        </p>
        <div class="text">
          <!-- lorem ipsum 텍스트는 일반적으로 레이아웃을 테스트하기 위한 더미 텍스트입니다. 실제 내용이 들어갈 자리를 차지합니다. -->
          			<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.
					Iusto, ea, impedit ut perspiciatis assumenda ipsam minus veritatis
					tenetur nisi commodi laboriosam quae sint nulla? Obcaecati,
					corrupti, placeat, quasi repudiandae deleniti quod aliquam facere
					vitae cumque sapiente sequi qui asperiores eos ipsum perferendis
					tenetur veritatis nesciunt dolores corporis sint nisi numquam
					excepturi dolor aspernatur natus provident et itaque quaerat saepe
					unde quo quidem odit sunt soluta animi incidunt beatae. Quod, amet
					recusandae earum iste debitis! Amet, expedita, aperiam, sint omnis
					fuga magnam eos quidem alias soluta nobis sunt unde incidunt!
					Ratione, autem eligendi molestiae saepe et numquam facilis pariatur
					voluptates ipsum!</p> <!-- p태그 끼리는 중첩이 안되서 div text 로 나눔 -->
					<br>					
					<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.
					Iusto, ea, impedit ut perspiciatis assumenda ipsam minus veritatis
					tenetur nisi commodi laboriosam quae sint nulla? Obcaecati,
					corrupti, placeat, quasi repudiandae deleniti quod aliquam facere
					vitae cumque sapiente sequi qui asperiores eos ipsum perferendis
					tenetur veritatis nesciunt dolores corporis sint nisi numquam
					excepturi dolor aspernatur natus provident et itaque quaerat saepe
					unde quo quidem odit sunt soluta animi incidunt beatae. Quod, amet
					recusandae earum iste debitis! Amet, expedita, aperiam, sint omnis
					fuga magnam eos quidem alias soluta nobis sunt unde incidunt!
					Ratione, autem eligendi molestiae saepe et numquam facilis pariatur
					voluptates ipsum!</p>
        </div><!-- .text 끝 -->
      </div>
      <!-- content 끝 -->
    </div>
    <!-- container 끝 -->
    <hr />

    <div id="footer">
      <!-- 하단 내비게이션 메뉴. footer에 위치하며 하단 링크들을 제공합니다. -->
      <dl class="btmnav">
        <dt class="blind">bottom navigation</dt>
        <dd><a href="#">About</a></dd> <!-- 각각의 링크는 하단 페이지들로 이동할 수 있는 메뉴를 제공합니다. -->
        <dd><a href="#">Services</a></dd>
        <dd><a href="#">Portfolio</a></dd>
        <dd><a href="#">Contact us</a></dd>
        <dd><a href="#">Location</a></dd>
      </dl>

      <!-- .copy 요소는 저작권 정보를 나타냅니다. -->
      <p class="copy">
        Copyright &copy; COMPANY Design<br> <!-- 저작권 정보가 포함된 텍스트 -->
        Powered by Webazit, e-mail 
        : <a href="mailto:webmaster@company.com">webmaster@company.com</a> <!-- 이메일 주소 링크 -->
      </p>
    </div>
    <!-- footer 끝 -->
  </div>
  <!-- wrap 끝 -->
  
</body>
</html>
<!-- 
Skip Navigation
Skip Navigation 사용하는 가장 큰 이유는 사용자 편의 및 웹 접근성이다.

웹 접근성이라고 하면 우리나라에서는 장애인에 대한 편의를 제공하는 것이다.

본문으로 이동하기 위해서는 대 메뉴와 좌측 메뉴 등과 같이 반복적으로 제공되는 링크를 모두 거쳐야만 한다. 즉, Tab키/방향키을 반복적으로 눌러야하는 불필요한 행동을 해야하는 것이다. 이는 웹 접근성을 저해하는 주요인이 된다. 그래서 사용자 특히 장애인이 반복적인 링크들로 인해 불편해 하지 않고, 원하는 영역 즉 ‘본문’으로 바로 이동할 수 있는 건너뛰기 링크를 반드시 제공해야 한다.

하지만 더 큰 범위에서는 정상적으로 쓸 수 없는 상황에 대해서도 편의를 제공하는 것이다.

가령 내가 마우스가 고장났다면?
또는 키보드를 못쓴다면? 

여기서 Skip Navigation는 키보드만으로 접근을 하는 사용자를 위한 편의를 제공하는 경우도 있다
마우스로 우리가 보고자 하는 본문 내용 쪽으로 포커스를 움직인다면 편리하겠지만, 
키보드만으로 쓰는 경우는 본문으로 가기까지 거쳐야 하는 메뉴들이 많다. 
그래서 HTML 가장 상단에 Skip Navigation를 만들어 놓는다.

Skip Navigation는 <body>다음으로 나오는 것이 가장 적절하다

[본문 바로가기]  [메뉴 바로가기]  [하단정보 바로가기]
등의 Skip Navigation가 가장 많다.

HTML
<div class="skipnav">
<ul>
    <li><a href="본문 아이디값">본문으로 이동</a></li>
    <li><a href="하단정보 아이디값">하단정보 바로가기</a></li>
</ul>
</div>

CSS
.skipnav a {display:none}
.skipnav a:focus,
.skipnav a:active {display:block;}

css 는 만들기 나름이다. js나 css3를 써서 움직임을 줄 수도 있고, 
position을 이용하여 display:none이 아닌 화면에서 보이지 않게 한 후 포커스가 가면 나오게 할 수도 있다. -->