<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>a태그에 onclick</title>
</head>
<body>
	<h1>window 객체</h1>
	<h3>open 메소드 확인</h3>
	<div>
		<a href="#" onclick="open1(); return false;">새 창 열기</a>
		<br> 
		<a href="#" onclick="open2(); return false;">팝업 창 열기(1)</a> 
		<br>
		<a href="#" onclick="open3('https://www.naver.com'); return false;">팝업 창 열기(2-1)</a> 
		<br>
		<a href="#" onclick="open3('https://www.google.com'); return false;">팝업 창 열기(2-2)</a> 
		<br>
	</div>

	<script type="text/javascript">
		function open1() {
			// 새 창이 열린다.
			//window.open("open.html");
			window.open("open.html", "", "width=500 height=300");
		}

		function open2() {
			// 클릭 할 때 마다 새로운 팝업 창이 계속해서 열린다.
			window.open("open.html", "",
							"width= 300, height=500, scrollbars=no, toolbar=no, menubar=no, status=no, loaction=no");
		}
		
		function open3(url) {
			// 한번만 생성된 팝업 창을 재사용
			window.open(url, "아무이름이나 사용",
			"width= 300, height=500, scrollbars=no, toolbar=no, menubar=no, status=no, loaction=no");
		}
		
		
		
	</script>
</body>
</html>

<!-- 

1번 - a태그에서 onclick 이 있을 경우에는 onclick를 먼저 수행하고 href로 이동하는 액션을 취한다.
<a href="http://www.naver.com/" onclick="alert('hi');">TEST1</a>

2번 - onclick에서 return false가 있을 경우 href로 이동하는 액션을 취하지 않게 된다.
<a href="http://www.naver.com/" onclick="alert('hi'); return false;">TEST2</a>

3번 - a태그에서 onclick 이 있을 경우에는 onclick를 먼저 수행하고 href로 이동하는 액션을 취하는데 
     href="#"로 호출 함수를 숨겨버렸기 때문에 페이지가 이동하지 않게 된다.
         갈 곳을 잃어버린 브라우저는 페이지의 상단으로 이동해버린다.
<a href="#" onclick="alert('hi');">TEST1</a>

 -->