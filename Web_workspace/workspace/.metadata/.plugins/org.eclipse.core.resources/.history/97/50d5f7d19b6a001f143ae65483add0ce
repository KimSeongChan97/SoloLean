// 중복체크 여부를 확인하는 변수
let idChecked = false;

// ID 중복체크
function checkId(){
    let id = document.getElementById('id').value;

    if(id === '') {
        document.getElementById('idDiv').innerHTML="먼저 아이디를 입력하세요 !!";
    } else {
        window.open("./checkId.jsp?id=" + id, "myWindow", "width=450 height=150 top=100 left=800");
        idChecked = true; // 중복체크가 완료되었음을 설정
    }
}

// 아이디 변경 시 중복체크를 다시 해야 함
document.getElementById('id').addEventListener('input', function() {
    idChecked = false; // 아이디가 변경되면 중복체크 상태를 초기화
});

// 회원가입 버튼 클릭 시 유효성 검사
function validateForm() {
    if (!idChecked) {
        alert("중복체크를 완료해주세요!");
        return false; // 중복체크가 안된 경우 폼 제출을 막음
    }
    return true; // 중복체크가 완료되었으면 폼을 제출
}

//우편번호 : Daum API
function checkPost() {
        new daum.Postcode({
            oncomplete: function(data) {
                var addr = ''; 
                
                if (data.userSelectedType === 'R') { 
                    addr = data.roadAddress; /* 사용자가 도로명 주소를 선택한 경우 */
                } else { 
                    addr = data.jibunAddress; /* 사용자가 지번 주소를 선택한 경우 */
                }
				
                document.getElementById('zipcode').value = data.zonecode; /* 선택한 우편번호를 해당 필드에 입력 */
                document.getElementById("addr1").value = addr; /* 선택한 주소를 주소 필드에 입력 */
                document.getElementById("addr2").focus(); /* 상세주소 필드로 포커스 이동 */
            }
        }).open(); /* 우편번호 검색 팝업 열기 */
    };

// 이메일 유효성 검사 스크립트 추가
function validateForm() {
    // 이메일 필드 값을 가져옴
    var email1 = document.getElementById("email1").value;
    var email2 = document.getElementById("email2").value;
    
    // 이메일 주소 결합
    var fullEmail = email1 + "@" + email2;

    // 이메일 패턴 확인 (정규식)
    var emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

    // 이메일 유효성 검사
    if (!emailPattern.test(fullEmail)) {
        alert("유효한 이메일 주소를 입력하세요.");
        return false; // 유효하지 않으면 제출 방지
    }

    return true; // 유효하면 제출 진행
}
