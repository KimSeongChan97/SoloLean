<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Animate</title>
<style type="text/css">

#box {
	border: 1px solid blue;
    background: #98bf21;
    height: 100px;
    width: 100px;
    position: absolute; /* 부모 div 영역 밖으로 밀려 나간다 */
    left: 0;
}

</style>
</head>
<body>
	<h1>Animate</h1>
	<button>Reset</button>
	<button>Ani1</button>
	<button>Ani2</button>
	<button>Ani3</button>
	<button>Ani4</button>
	<div id="animation-area" style="border: 1px solid red;">
		<div id="box">div 안의 내용</div>
	</div>
	
		
<script type="text/javascript" src="http://code.jquery.com/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
$(function(){
	$('button:eq(0)').click(function(){
		$('#animation-area').html('<div id="box">div 안의 내용</div>');
	});
	
	// 왼쪽으로부터 250px 만큼 div 이동
	$('button:eq(1)').click(function(){
		$('#box').animate({ 
			'left': '250px' // CSS 는 JSON 형식으로 표현, 숫자 뿐만이 아닌 문자도 들어가면 '' 가 있어야 한다.
		}, 1000, 'swing', function(){
			alert('애니메이션 종료')
		});
	});
	
	// 왼쪽으로부터 250px 이동하고, 높이와 너비를 150px에 하기
	$('button:eq(2)').click(function(){
		$('#box').animate({ // JSON 형식의 CSS 속성을 여러 개 나열할 수 있다.
			'left' : '250px',
			'height' : '150px',
			'width' : '150px'
		});
	}); // CSS 속성을 제외한 나머지 파라메터들은 생략 가능
	
	// 왼쪽으로부터 50px씩 이동하고, 너비와 높이를 50px씩 크게 하기
	$('button:eq(3)').click(function(){
		$('#box').animate({ 
			'left' : '50px',
			'height' : '50px',
			'width' : '50px'
		}, duration);
	});
	
	
	$('button:eq(4)').click(function(){});
	
});
</script>
</body>
</html>

<!-- 
animate() 함수를 사용한 CSS 속성의 애니메이션 처리
좀 더 다이나믹한 애니메이션을 구현할 수 있다.
animate() 함수는 수치값을 지정하는 CSS 속성들을 제어하여 애니메이션 효과를 만들어 낸다.
구조
animate(properties [, duration][, easing][, complete])

① properties 
  
움직임을 만들어 낼수 있는 CSS 속성들. json 형식으로 기술된다.
② duration
  
애니메이션의 지속시간 설정
③ easing
  
움직임에 변화를 줄 수 있는 속성. 
swing : 끝점에 가서 속도가 살짝 느려짐
linear : 균일한 속도 유지
④ complete
  
움직임이 멈춘 후 실행될 속성. 
움직임이 완료된 다음 이 속성에 지정된 함수가 실행된다.
-->