package board.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

import board.bean.BoardDTO;

public class BoardDAO {

    // 싱글톤 패턴 적용
    private static BoardDAO instance = new BoardDAO();
    private DataSource ds;

    private BoardDAO() {
        try {
            // InitialContext를 통해 context.xml의 Resource를 찾음
            Context init = new InitialContext();
            ds = (DataSource) init.lookup("java:comp/env/jdbc/oracle");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static BoardDAO getInstance() {
        return instance;
    }

    // 시퀀스 값 얻어오기
    public int getNextSeq() {
        int seq = 0;
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        String sql = "SELECT seq_board.NEXTVAL FROM dual";

        try {
            conn = ds.getConnection();  // DataSource를 통한 커넥션 풀 사용
            pstmt = conn.prepareStatement(sql);
            rs = pstmt.executeQuery();
            if (rs.next()) {
                seq = rs.getInt(1);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close(conn, pstmt, rs);
        }

        return seq;
    }

    // 게시글 삽입 메서드
    public void insertBoard(BoardDTO boardDTO) {
        Connection conn = null;
        PreparedStatement pstmt = null;

        String sql = "INSERT INTO board (seq, id, name, email, subject, content, ref, lev, step, pseq, reply, hit, logtime) "
                   + "VALUES (?, ?, ?, ?, ?, ?, ?, 0, 0, 0, 0, 0, SYSDATE)";

        try {
            conn = ds.getConnection();  // DataSource를 통한 커넥션 풀 사용
            pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, boardDTO.getSeq());
            pstmt.setString(2, boardDTO.getId());
            pstmt.setString(3, boardDTO.getName());
            pstmt.setString(4, boardDTO.getEmail());
            pstmt.setString(5, boardDTO.getSubject());
            pstmt.setString(6, boardDTO.getContent());
            pstmt.setInt(7, boardDTO.getRef());

            pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close(conn, pstmt);
        }
    }

    // 리소스 반환 메서드
    private void close(Connection conn, PreparedStatement pstmt, ResultSet rs) {
        try {
            if (rs != null) rs.close();
            if (pstmt != null) pstmt.close();
            if (conn != null) conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void close(Connection conn, PreparedStatement pstmt) {
        try {
            if (pstmt != null) pstmt.close();
            if (conn != null) conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
