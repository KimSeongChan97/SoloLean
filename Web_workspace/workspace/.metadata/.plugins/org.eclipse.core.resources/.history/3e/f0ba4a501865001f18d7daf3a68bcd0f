<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<style type="text/css">

* {
 padding: 0;
 margin: 0;
 color: #333;
}

ul {
   list-style: none;
}

#container {
   padding: 30px 20px;
}

h1 {
   font-size: large;
   border-left: 10px solid #7BAEB5;
   border-bottom: 1px solid #7BAEB5;
   padding: 10px;
   width: auto;
}

#comment_write {
   padding: 20px 15px;
   border-bottom: 1px solid #7BAEB5;
}

#comment_write label {
   display: inline-block;
   width: 80px;
   font-size: 14px;
   font-weight: bold;
   margin-bottom: 10px;
}

#comment_write input[type='text'], #comment_write textarea {
   border: 1px solid #ccc;
   vertical-align: middle;
   padding: 3px 10px;
   font-size: 12px;
   line-height: 150%;
}

#comment_write textarea {
   width: 380px;
   height: 90px
}

.comment_item {
   font-size: 13px;
   color: #333;
   padding: 15px;
   border-bottom: 1px dotted #ccc;
   line-height: 150%;
}

.comment_item .writer {
   color: #555;
   line-height: 200%;
}

.comment_item .writer input {
   vertical-align: middle;
}

.comment_item .writer .name {
   color: #222;
   font-weight: bold;
   font-size: 14px;
}

#writerDiv, #contentDiv {
	color: red;
	font-size: 9pt;
	font-weight: bold;
 
}

</style>
</head>
<body>

<div id="container">
		<h1>jQuery Comment</h1>
		<div id="comment_write">
			<form id="comment_form">
					<input type="hidden" name="num" id="num" value=""/>
					<input type="hidden" name="datetime" id="datetime" value=""/>
				<div>
					<label for="writer">작성자</label>
					<input type="text" name="writer" id="writer" />
					<input type="submit" value="저장하기" />
					<div id="writerDiv"></div>
				</div>
				<div>
					<label for="content">덧글 내용</label>
					<textarea name="content" id="content" ></textarea>
					<div id="contentDiv"></div>
				</div>
			</form>
		</div>

		<ul id="comment_list" ></ul>
	</div>

<script type="text/javascript" src="http://code.jquery.com/jquery-3.7.1.min.js"></script>
<script type="text/javascript">
function addItem(num, writer, content, datetime) {
	// <li date-num="" class="comment_item"></li>
	let new_li = $('<li/>');
	new_li.attr('data-num', num); 
	new_li.addClass('comment_item');
	
	// <p class="writer"></p>
	let writer_p = $('<p/>');
	writer_p.addClass('writer');
	
	// <span class="name">~~~님</span>
	let name_span = $('<span/>');
	name_span.addClass('name');
	name_span.html(writer + '님');
	
	// <span> / datetime</span>
	let date_span = $('<span/>');
	date_span.html(' / ' + datetime + ' ');
	
	// <input type="button" value="삭제하기" class="delete_btn">
	let del_input = $('<input/>');
	del_input.attr({
		'type': 'button',
		'value': '삭제하기'
	});
	del_input.addClass('delete_btn');
	
	// <p> ~~ </p>
	let content_p = $('<p/>');  
	content_p.html(content);
	
	// 작성자 정보와 덧글 내용을 li에 추가
	writer_p.append(name_span).append(date_span).append(del_input); 
	new_li.append(writer_p).append(content_p);  
	$('#comment_list').append(new_li); 
	
	
}

function getToday() {
	// 현재 날짜와 시간을 가져와 포맷팅
	let date = new Date();  // 현재 날짜와 시간 정보를 저장하는 Date 객체를 생성합니다.
	let yy = date.getFullYear();   // 현재 연도(yyyy)를 가져옵니다.
	let mm = date.getMonth()+1;    // 월을 가져오고, 0부터 시작하므로 +1을 더해 실제 월을 계산합니다.
	let dd = date.getDate();       // 현재 날짜(dd)를 가져옵니다.
	let hh = date.getHours();      // 현재 시각(24시간제)을 가져옵니다.
	let mi = date.getMinutes();    // 현재 분(minute)을 가져옵니다.
	let ss = date.getSeconds();    // 현재 초(second)를 가져옵니다.
	
	// 숫자가 10보다 작으면 앞에 0을 붙여 두 자리로 맞춥니다.
	// 예: 1월 -> 01월, 5분 -> 05분 (두 자리 숫자를 유지하여 시간 포맷을 일관되게 만듦)
	if(mm < 10) mm = '0' + mm;
	if(dd < 10) dd = '0' + dd;
	if(hh < 10) hh = '0' + hh;
	if(mi < 10) mi = '0' + mi;
	if(ss < 10) ss = '0' + ss;
	
	// '2024 - 04 - 23 _ 13 : 45 : 30' 형식으로 오늘 날짜와 시간을 문자열로 저장
	let today = yy + ' - ' + mm + ' - ' + dd + ' _ ' + hh + ' : ' + mi + ' : ' + ss;  // 날짜와 시간을 적절한 포맷으로 저장
	
	return today;
	
}

</script>
<script type="text/javascript">
	
let num = 3; // 전역변수

$(function(){
	// let num = 3; -> 지역변수
	
	//목록 (select * from 테이블의 의미)
	$.get('../comment/comment_list.xml', {}, function(data){
				$(data).find('item').each(function(){
					let num = $(this).find('num').text();
					let writer = $(this).find('writer').text();
					let content = $(this).find('content').text();
					let datetime = $(this).find('datetime').text();
					
					addItem(num, writer, content, datetime); // 호출
				}); // each , 배열
			}).fail(function(){
				alert('덧글 목록을 불러오는데 실패하였습니다.')
			});
		
	//저장
	$('#comment_form').submit(function(){
		$('#writerDiv').empty();
		$('#contentDiv').empty();
		
		if(!$('#writer').val()) {
			$('#writerDiv').text('작성자 입력하세요');
			$('#writer').focus();
			return false;
		}//if writer 유효성 검사
		
		if(!$('#content').val()) {
			$('#contentDiv').text('덧글 내용 입력하세요');
			$('#content').focus();
			return false;
		}//if content 유효성 검사
		
		$('#num').val(++num);
		$('#datetime').val(getToday());
		
		//$.post('../comment/comment_write.jsp',
				$.post('../comment/comment_write_JSTL.jsp',
				$('#comment_form').serialize(),
				function(data){
					// "true" => true 변환이 필요
					let result = eval($(data).find('result').text());
					
					if(result){
						alert($(data).find('message').text());
						
						let num = $(data).find('num').text();
						let writer = $(data).find('writer').text();
						let content = $(data).find('content').text();
						let datetime = $(data).find('datetime').text();
						
						addItem(num, writer, content, datetime); //호출
						
						// 초기화
						$('#write').val('');
						$('#content').val('');
						
					}//if
					
					
					
				}).fail(function(){
					alert('덧글 삭제하는데 실패하였습니다.');
				});
		
		return false;
	});
	
	//삭제
	$(document).on('click', '.delete_btn', function(){
		// num이 고유 키가 되므로 num 을 중심으로 작업
		let num = 
		
	}).fail(function(){
		alert('덧글을 삭제하는데 실패하였습니다.');
	});
	
});
</script>
</body>
</html>

<!-- 
data-*
data- 로 시작하는 속성은 Custom Data Attributes 라고 html5에서 새롭게 추가된 속성이다.
말 그대로 사용자 정의 데이터 속성이다.
특별한 기능보다는 html5 element의 데이터를 의미 있게 표현할 수 있는 속성이다.
html5에서 추가된 태그로는 콘텐츠의 아주 디테일한 의미까지 정의하기 힘들므로 
data- 속성으로 의미를 구체화 하시오.. 이런 의미로 보면 된다.
CSS 입장에서는 id와 class 외에 속성값으로 접근하는 수단이 늘어난 것이다.
jQuery에서도 .data()를 이용해 접근 가능하다.

예]
<li class="user" data-name="홍길동" data-city="Seoul" data-car="sm6">
    <strong>홍길동:</strong> <span>안녕하세요</span>
</li>

 CSS에서 사용
<style type="text/css">
    [data-name] { color: red; }
</style>

 jQuery에서 .data()를 이용해 접근 
-데이터를 가져올 때,
    $(".user").data("name") -- 홍길동 

데이터를 설정할 때,$(".user").data("name", "고길동");
-->

