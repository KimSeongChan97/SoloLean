<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Timer</title>
</head>
<body onload="startTime()"> <!-- onload 이벤트는 페이지가 완전히 로드된 후 지정된 자바스크립트 함수를 호출하는데 사용됩니다. 
								이 경우 페이지가 로드되면 자동으로 startTime() 함수가 실행됩니다. 이를 통해 타이머 기능이 자동으로 시작됩니다. -->
	<h1 id="timer">현재 시간을 보여줍니다.</h1> <!-- h1 태그는 가장 큰 제목 요소로, 이곳에 현재 시간이 표시될 것입니다. 
													JavaScript를 사용하여 이 요소의 내용을 동적으로 변경하여 시간을 계속 업데이트합니다. -->

	<script type="text/javascript">
		/* let now = new Date(); //내장객체
		document.write(now+"<br/>");
		document.write(now.toLocaleString()); */
		// 위의 주석 처리된 코드는 현재 날짜와 시간을 Date 객체를 통해 가져오는 방법을 보여줍니다.
		// new Date()는 자바스크립트의 내장 객체인 Date를 생성하는데 사용되며, 현재 시스템 시간을 반환합니다.
		// document.write(now)은 HTML 문서에 현재 시간을 출력하고, now.toLocaleString() 메서드는 
		// 현재 시간을 사용자의 지역 설정에 맞는 형식으로 변환해 출력하는 예시입니다.
		// 여기서는 직접 화면에 출력을 하였으나, 이후 자동으로 시간이 업데이트되도록 변경된 부분을 구현했습니다.

		function startTime() { // 구현된 함수. startTime 함수는 타이머가 시작되도록 설정하는 함수입니다.
			/* 
			setInterval(() => {
				let today = new Date();
				document.write(today.toLocaleString() + "<br>");
			}, 1000); // 1000 은 1초 (기준은 밀리세컨드), 화살표 함수를 이용하여 함수 반복 
			 */
			
			// setInterval 함수는 일정 간격으로 지정된 함수를 반복 실행하는 내장 함수입니다.
			// 첫 번째 인자는 실행할 함수이며, 두 번째 인자는 실행 간격을 밀리세컨드 단위로 받습니다.
			// 여기서는 1000ms, 즉 1초마다 printTime 함수를 호출하여 시간이 갱신되도록 설정하고 있습니다.
			setInterval(printTime, 1000); // 단위 : 밀리세컨드(1000분의 1초) 즉, 1000ms = 1초
		}
		
		function printTime() { // 현재 시간을 화면에 표시하는 함수입니다.
			let days = [ "일", "월", "화", "수", "목", "금", "토" ]; 
			// 요일을 나타내는 문자열 배열로, 일요일부터 토요일까지의 요일을 순서대로 배열에 저장합니다.
			// 자바스크립트의 Date 객체에서 getDay() 메서드는 요일을 숫자로 반환하는데,
			// 0은 일요일, 1은 월요일, ..., 6은 토요일을 나타냅니다. 이 배열과 함께 사용해 요일 문자열을 표시합니다.

			let today = new Date(); // 현재 시스템의 날짜와 시간을 가져오는 Date 객체 생성.
			// 이 객체는 현재 시간 정보를 포함하고 있으며, 이후 메서드를 통해 년, 월, 일, 시, 분, 초 등의 정보를 가져올 수 있습니다.

			// 년도, 월, 일, 요일 등의 날짜 정보를 추출
			let yy = today.getFullYear(); // getFullYear() 메서드는 현재 연도를 4자리 숫자로 반환합니다. 예: 2024
			let mm = today.getMonth() + 1; // getMonth() 메서드는 현재 월을 0부터 시작하는 숫자로 반환합니다. 
										   // 따라서 1월은 0, 2월은 1로 반환되므로 +1을 해주어 실제 월을 표시합니다.
			let dd = today.getDate(); // getDate() 메서드는 현재 날짜(일)를 반환합니다. (1부터 31까지의 값)
			let i = today.getDay(); // getDay() 메서드는 요일을 숫자로 반환합니다. 0이 일요일, 1이 월요일, ..., 6이 토요일입니다.
			let day = days[i]; // days 배열에서 요일 인덱스 i에 해당하는 문자열을 가져와 day에 저장합니다. (예: "월")

			// 시간, 분, 초 등의 시간 정보를 추출
			let hh = today.getHours(); // getHours() 메서드는 현재 시간을 24시간 형식으로 반환합니다. (0~23)
			let mi = today.getMinutes(); // getMinutes() 메서드는 현재 분을 반환합니다. (0~59)
			let ss = today.getSeconds(); // getSeconds() 메서드는 현재 초를 반환합니다. (0~59)

			// 각 날짜와 시간 정보를 조합하여 하나의 문자열로 구성합니다.
			// 최종 형식은 "YYYY - MM - DD 요일 HH : MM : SS" 형태로, 예를 들어 "2024 - 8 - 21 화요일 14 : 30 : 45"와 같은 형식이 됩니다.
			let result = yy + " - " + mm + " - " + dd + " " + day + "요일 " + hh
					+ " : " + mi + " : " + ss;

			// HTML 문서에서 id가 'timer'인 요소를 찾아서, 해당 요소의 내용을 위에서 조합한 현재 시간 문자열로 갱신합니다.
			// 이로 인해 페이지가 1초마다 현재 시간으로 자동 업데이트됩니다.
			document.getElementById("timer").innerHTML = result;
		}
	</script>
</body>
</html>
