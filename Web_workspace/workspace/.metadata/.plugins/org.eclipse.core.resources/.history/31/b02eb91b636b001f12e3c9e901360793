<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<%
	//String name = request.getParameter("name");
	//String id = request.getParameter("id");
    // 위 코드 부분은 주석 처리되었습니다. 원래는 URL 파라미터로부터 name과 id 값을 가져오던 코드입니다.
    // 하지만 현재는 쿠키에서 name과 id 값을 가져올 예정이기 때문에 주석 처리되었습니다.

	String name = null; // name 변수를 null로 초기화
	String id = null; // id 변수를 null로 초기화
	
	// 쿠키
	// 클라이언트로부터 모든 쿠키를 가져옵니다. 쿠키는 name-value(이름-값) 형식으로 저장됩니다.
	// request.getCookies() 메서드는 클라이언트의 모든 쿠키를 배열로 반환합니다.
	Cookie[] ar = request.getCookies(); // 특정 쿠키만을 가져오지 못하고 모든 쿠키들을 다 가져온다.
	
    // 쿠키가 없는 경우, ar 배열은 null입니다. 쿠키가 존재하지 않을 때는 루프에 진입하지 않습니다.
    // if문 조건에서 `ar == null`은 쿠키가 없을 경우를 처리하는데, 현재 코드는 잘못된 조건입니다.
    // 쿠키가 없으면 배열이 null이므로 "ar != null"로 조건을 수정해야 합니다.
	// if (ar == null)는 논리적으로 맞지 않으므로 "ar != null"로 변경하는 것이 맞습니다. 
	if(ar != null) { 
        // for 루프를 통해 모든 쿠키를 순회합니다.
        // ar.length는 쿠키 배열의 크기입니다. 모든 쿠키를 탐색합니다.
		for(int i=0; i<ar.length; i++){
			String cookieName = ar[i].getName(); // 쿠키명
			String cookieValue = ar[i].getValue(); // 쿠키값
			
            // 가져온 쿠키의 이름과 값을 출력합니다.
            // System.out.println()은 서버 콘솔에 출력하는 기능입니다. 개발 단계에서 디버깅 목적으로 사용됩니다.
			System.out.println("쿠키명 = " + cookieName);  // 현재 쿠키의 이름을 출력
			System.out.println("쿠키값 = " + cookieValue);  // 현재 쿠키의 값을 출력
			System.out.println();  // 출력 사이에 빈 줄을 추가하여 가독성 향상
			
            // 쿠키명에 따라 적절한 변수에 값을 할당합니다.
            // "memName"이라는 쿠키가 있을 경우, name 변수에 해당 쿠키 값을 저장
            if (cookieName.equals("memName")) {
				name = cookieValue;  // 쿠키 값으로 name을 설정
			}
            
            // "memId"라는 쿠키가 있을 경우, id 변수에 해당 쿠키 값을 저장
            if (cookieName.equals("memId")) {
				id = cookieValue;  // 쿠키 값으로 id를 설정
			}
		} // for
	} // if 쿠키가 있을 때만 실행됨 (쿠키가 null이 아닐 동안)
%>

<%-- 
name과 id 값이 쿠키에서 제대로 가져와졌다면, 이를 페이지에 출력합니다. 
name과 id를 JSP 페이지에 출력합니다. 만약 쿠키가 null이라면 빈 값이 출력됩니다.
--%>
 
<%=name %>  <%=id %>  
