$(function() {
	// 'boardWriteBtn' 버튼을 클릭했을 때 이벤트를 발생시킵니다.
	$('#boardWriteBtn').click(function(event) {
		event.preventDefault(); // 폼의 기본 제출 동작을 막습니다.
        // **기존 주석**: 폼이 기본적으로 서버에 제출되기 전에 브라우저에서 처리되는 동작을 막아주는 메서드입니다.
        // **추가 주석**: 이를 통해 페이지가 새로고침되지 않고, AJAX를 이용한 비동기 통신을 사용할 수 있게 됩니다.
		
		// 제목과 내용을 초기화합니다.
		$('#subjectDiv').empty();
		$('#contentDiv').empty();
        // **기존 주석**: 경고 메시지를 표시하는 div 요소를 비웁니다.
        // **추가 주석**: 이 메서드는 지정한 요소의 내부 HTML을 모두 제거합니다. 만약 이전에 에러 메시지가 있었다면, 이를 초기화해 다시 사용할 수 있게 합니다.
		
		// 입력된 제목과 내용을 확인하고, 비어 있으면 경고 메시지를 보여줍니다.
		if ($('#subject').val() == '') 
			$('#subjectDiv').html('제목을 입력해주세요');
        // **기존 주석**: 제목이 비어있으면 '제목을 입력해주세요'라는 메시지를 subjectDiv에 출력합니다.
        // **추가 주석**: `$('#subject').val()`은 'subject' 입력 필드의 값을 가져옵니다. 값이 비어 있으면 경고 메시지를 나타내며, 비어 있지 않으면 내용을 계속 처리합니다.
		else if ($('#content').val() == '') 
			$('#contentDiv').html('내용을 입력해주세요');
        // **기존 주석**: 내용이 비어있으면 '내용을 입력해주세요'라는 메시지를 contentDiv에 출력합니다.
        // **추가 주석**: 여기서도 `$('#content').val()`을 사용하여 'content' 입력 필드의 내용을 확인합니다. 빈 값일 경우 경고 메시지를 출력합니다.
		else {
			// AJAX 요청을 통해 데이터를 서버에 전송합니다.
			$.ajax({
				type: 'post', // 'tpye' 오타 수정
                // **기존 주석**: 요청 방식을 POST로 지정합니다.
                // **추가 주석**: GET 방식 대신 POST 방식을 사용하는 이유는, 데이터를 서버에 보낼 때 더 많은 양의 데이터를 안전하게 전송하기 위함입니다.
                
				url: 'boardWrite_lean.jsp', 
                // **기존 주석**: 요청을 처리할 서버의 URL을 지정합니다.
                // **추가 주석**: 'boardWrite_lean.jsp' 페이지가 서버에서 글쓰기 작업을 처리하는 역할을 담당합니다. 이 URL로 AJAX 요청을 보내 글쓰기 데이터를 처리합니다.
                
				data: {
					'subject': $('#subject').val(), // 제목 입력 값을 서버로 전송
                    // **기존 주석**: 제목 입력 필드의 값을 'subject'라는 이름으로 서버에 보냅니다.
                    // **추가 주석**: `$('#subject').val()`로 제목 필드의 내용을 가져와 데이터 객체에 포함시킵니다.
                    
					'content': $('#content').val()  // 내용 입력 값을 서버로 전송
                    // **기존 주석**: 내용 입력 필드의 값을 'content'라는 이름으로 서버에 보냅니다.
                    // **추가 주석**: 마찬가지로, `$('#content').val()`로 내용 필드의 값을 가져와 데이터 객체에 추가하여 서버로 보냅니다.
				},
				success: function() {
					// 성공 시 처리: 알림을 표시하고 리스트 페이지로 이동합니다.
					alert("글쓰기가 완료되었습니다.");
                    // **기존 주석**: 서버 요청이 성공적으로 완료되면, 글쓰기가 완료되었다는 알림 메시지를 띄웁니다.
                    // **추가 주석**: AJAX 요청이 성공적으로 끝나면 이 콜백 함수가 실행됩니다. 이때 `alert()` 메서드를 통해 사용자에게 글쓰기가 완료되었음을 알립니다.
                    
					location.href = "boardList_lean.jsp"; 
                    // **기존 주석**: 글쓰기 완료 후 리스트 페이지로 이동
                    // **추가 주석**: 현재 페이지에서 다른 페이지로 이동하는 방법으로, 글쓰기 완료 후 'boardList_lean.jsp'로 사용자를 리다이렉트시킵니다.
				},
				error: function(e) {
					// 에러 발생 시
					console.log(e);  // 에러 발생 시 콘솔에 출력
                    // **기존 주석**: 에러가 발생하면 콘솔에 에러 정보를 출력합니다.
                    // **추가 주석**: 에러가 발생할 경우 개발자가 확인할 수 있도록 에러 객체를 브라우저의 콘솔에 출력합니다. 이를 통해 디버깅할 수 있습니다.
				}
			});
		}
	});
});
