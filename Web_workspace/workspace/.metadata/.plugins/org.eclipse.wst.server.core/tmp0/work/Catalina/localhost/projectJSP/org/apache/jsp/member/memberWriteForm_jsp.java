/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-09-06 03:18:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberWriteForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입 페이지</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/projectJSP/css/memberWritecss.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/jsp/nav.jsp", out, false);
      out.write("\r\n");
      out.write("		<hr/>\r\n");
      out.write("	    <h3 align=\"center\" style=\"font-family: 'Comic Sans MS';\" style=\"cursor: pointer;\" \r\n");
      out.write("	 		onclick=\"location.href='../index.jsp'\" >회원가입</h3>\r\n");
      out.write("			\r\n");
      out.write("		<form name=\"memberForm\" method=\"post\" action=\"/projectJSP/member/memberWrite.jsp\">\r\n");
      out.write("        <table>\r\n");
      out.write("            <!-- 이름 입력 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>이름</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"이름 입력\">\r\n");
      out.write("                <div id=\"nameDiv\"></div> <!-- 오류 메시지나 확인 메시지를 표시할 div 영역 -->\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <!-- 아이디 입력 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>아이디</td>\r\n");
      out.write("                <td class=\"id-field\">\r\n");
      out.write("                    <input type=\"text\" name=\"id\" size=\"30\" id=\"id\" placeholder=\"아이디 입력\">\r\n");
      out.write("                    <input type=\"button\" onclick=\"checkId()\" value=\"중복체크\"/> <!-- 아이디 중복체크 버튼 -->\r\n");
      out.write("                    <input type=\"text\" id=\"check\" value=\"\" />\r\n");
      out.write("                    <div id=\"idDiv\"></div> <!-- 아이디 중복 검사 결과를 표시할 div -->\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <!-- 비밀번호 입력 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>비밀번호</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                <input type=\"password\" name=\"pwd\" size=\"40\" id=\"pwd\" placeholder=\"비밀번호 입력\">\r\n");
      out.write("                <div id=\"pwdDiv\"></div> <!-- 비밀번호 입력 관련 오류 메시지를 표시할 div -->\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <!-- 비밀번호 재입력 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>재확인</td>\r\n");
      out.write("                <td><input type=\"password\" name=\"repwd\" size=\"40\" id=\"repwd\" placeholder=\"비밀번호 재입력\">\r\n");
      out.write("                <div id=\"repwdDiv\"></div> <!-- 비밀번호 재입력 관련 오류 메시지를 표시할 div -->\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <!-- 성별 선택 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>성별</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"radio\" name=\"gender\" value=\"M\" checked=\"checked\" />남자 \r\n");
      out.write("                    <input type=\"radio\" name=\"gender\" value=\"F\" />여자 \r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <!-- 이메일 입력 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>이메일</td>\r\n");
      out.write("                <td class=\"email-field\">\r\n");
      out.write("                    <!-- 사용자가 입력할 이메일의 앞부분 (email1) -->\r\n");
      out.write("                    <input type=\"text\" name=\"email1\" id=\"email1\" placeholder=\"이메일 입력\">\r\n");
      out.write("                    @ <!-- 이미 포함된 '@' 기호를 사용하여 이메일의 앞뒤를 구분 -->\r\n");
      out.write("                    <!-- 사용자가 입력할 이메일의 뒷부분 (email2) -->\r\n");
      out.write("                    <input type=\"text\" name=\"email2\" id=\"email2\" placeholder=\"직접입력\" list=\"email_list\" oninput=\"change()\" />\r\n");
      out.write("                    <datalist id=\"email_list\">\r\n");
      out.write("                        <option value=\"naver.com\"></option>\r\n");
      out.write("                        <option value=\"gmail.com\"></option>\r\n");
      out.write("                        <option value=\"hanmail.com\"></option>\r\n");
      out.write("                        <option value=\"daum.net\"></option>\r\n");
      out.write("                    </datalist>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <!-- 휴대전화 입력 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>휴대전화</td>\r\n");
      out.write("                <td class=\"phone-field\">\r\n");
      out.write("                    <select name=\"tel1\" id=\"tel1\"> \r\n");
      out.write("                    	<optgroup label=\"hp\">\r\n");
      out.write("                        <option value=\"010\">010</option>\r\n");
      out.write("                        <option value=\"011\">011</option>\r\n");
      out.write("                        <option value=\"019\">019</option>\r\n");
      out.write("                        </optgroup>\r\n");
      out.write("                    </select>\r\n");
      out.write("                    -\r\n");
      out.write("                    <input type=\"text\" name=\"tel2\" size=\"5\" maxlength=\"4\" id=\"tel2\" placeholder=\"앞자리\">\r\n");
      out.write("                    -\r\n");
      out.write("                    <input type=\"text\" name=\"tel3\" size=\"5\" maxlength=\"4\" id=\"tel3\" placeholder=\"뒷자리\">\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <!-- 주소 입력 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>주소</td>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"text\" name=\"zipcode\" id=\"zipcode\" size=\"6\" readonly placeholder=\"우편번호\">\r\n");
      out.write("                    <input type=\"button\" value=\"우편번호 검색\" onclick=\"checkPost()\">\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"text\" name=\"addr1\" id=\"addr1\" size=\"60\" readonly placeholder=\"주소\">\r\n");
      out.write("                    <br>\r\n");
      out.write("                    <input type=\"text\" name=\"addr2\" id=\"addr2\" size=\"60\" placeholder=\"상세주소\">\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("\r\n");
      out.write("            <!-- 하단 버튼 필드 -->\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td colspan=\"2\" align=\"center\">\r\n");
      out.write("                    <input type=\"submit\" value=\"회원가입\" /> \r\n");
      out.write("                    <input type=\"reset\" value=\"다시입력\"/> \r\n");
      out.write("                    <input type=\"button\" value=\"뒤로가기\" onclick=\"window.location.href='../index.jsp';\"> \r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("    </form>\r\n");
      out.write("    \r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script> <!-- 우편번호 검색 API -->\r\n");
      out.write("<script src=\"../js/member.js\"></script> <!-- JavaScript 함수 파일 로드 -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("    <!-- jQuery로 JSP 파일을 불러오는 코드 -->\r\n");
      out.write("    <script>\r\n");
      out.write("        // jQuery의 load() 메서드를 사용하여 JSP 파일을 불러옴\r\n");
      out.write("        $('#navbar').load('/projectJSP/jsp/nav.jsp');\r\n");
      out.write("    </script>  \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("validateForm() 함수 설명:\r\n");
      out.write("\r\n");
      out.write("이 함수는 회원가입 폼을 제출하기 전에 모든 입력 값들이 유효한지 확인하는 역할을 합니다.\r\n");
      out.write("여러 유효성 검사 항목을 통해 사용자 입력의 오류를 체크하고, 오류가 있으면 폼 제출을 막습니다.\r\n");
      out.write("\r\n");
      out.write("1. 이름 유효성 검사\r\n");
      out.write("    - 이름 필드가 비어있는지 확인합니다.\r\n");
      out.write("    - 이름에 숫자나 특수문자가 포함되지 않았는지 검사합니다.\r\n");
      out.write("    - 오류가 있으면 오류 메시지를 출력하고, 없으면 메시지를 제거합니다.\r\n");
      out.write("\r\n");
      out.write("2. 아이디 중복 체크 확인\r\n");
      out.write("    - 사용자가 아이디 중복 체크를 완료했는지 확인합니다.\r\n");
      out.write("    - 중복 체크가 완료되지 않았으면 경고 메시지를 띄우고 폼 제출을 막습니다.\r\n");
      out.write("\r\n");
      out.write("3. 비밀번호 유효성 검사\r\n");
      out.write("    - 비밀번호의 길이가 3자 이상인지 확인합니다.\r\n");
      out.write("    - 비밀번호와 재입력된 비밀번호가 일치하는지 확인합니다.\r\n");
      out.write("    - 비밀번호에 숫자와 특수문자가 포함되었는지 검사합니다.\r\n");
      out.write("    - 위의 조건을 만족하지 않으면 폼 제출을 막고 오류 메시지를 출력합니다.\r\n");
      out.write("\r\n");
      out.write("4. 이메일 유효성 검사\r\n");
      out.write("    - 사용자가 입력한 이메일이 유효한 형식인지 확인합니다.\r\n");
      out.write("    - 이메일 앞부분과 도메인(예: naver.com)을 결합하여 전체 이메일을 만듭니다.\r\n");
      out.write("    - 정규식을 사용하여 이메일 형식이 유효한지 검사합니다.\r\n");
      out.write("    - 유효하지 않은 이메일 형식이면 경고 메시지를 띄우고 폼 제출을 막습니다.\r\n");
      out.write("\r\n");
      out.write("5. 모든 유효성 검사를 통과한 경우 폼을 제출할 수 있도록 허용합니다.\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
