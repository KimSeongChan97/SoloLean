/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-09-19 03:32:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.bean.MemberDTO;
import member.dao.MemberDAO;

public final class updateForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("member.dao.MemberDAO");
    _jspx_imports_classes.add("member.bean.MemberDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body {\r\n");
      out.write("	background-color: #0d0d0d;\r\n");
      out.write("	color: #00ffcc;\r\n");
      out.write("}\r\n");
      out.write("table {\r\n");
      out.write("	border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("th, td {\r\n");
      out.write("	padding: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#updateForm {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	margin: 30px auto;\r\n");
      out.write("	text-align: left;	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#updateForm div {\r\n");
      out.write("	color: red;\r\n");
      out.write("	font-size: 8pt;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form name=\"updateForm\" id=\"updateForm\" >\r\n");
      out.write("		<h1>\r\n");
      out.write("			<img src=\"../image/4.jpg\" width=\"100\" height=\"100\" alt=\"홈\" \r\n");
      out.write("		 	onclick=\"location.href='/projectMVC/index.do'\" style=\"cursor: pointer;\">\r\n");
      out.write("		 	<!-- 클릭 시 메인 페이지로 이동하는 홈 버튼을 구현 -->\r\n");
      out.write("		  	회원정보수정\r\n");
      out.write("		</h1>\r\n");
      out.write("	<table border=\"1\">\r\n");
      out.write("		<tr>\r\n");
      out.write("	        <th width=\"100\">이름</th>\r\n");
      out.write("	        <td>\r\n");
      out.write("	        	<input type=\"text\" name=\"name\" id=\"name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("	        	<!-- 회원 이름을 출력하고 수정할 수 있도록 제공 -->\r\n");
      out.write("	        	<div id=\"nameDiv\"></div>\r\n");
      out.write("	        	<!-- 이름 유효성 검사 메시지가 표시될 영역 -->\r\n");
      out.write("	        </td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    <tr>\r\n");
      out.write("	        <th>아이디</th>\r\n");
      out.write("	        <td>\r\n");
      out.write("	        	<input type=\"text\" name=\"id\" id=\"id\" size=\"30\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.id }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>     \r\n");
      out.write("	        	<!-- 회원의 아이디는 수정 불가하도록 readonly 속성을 추가하여 출력 -->\r\n");
      out.write("	        </td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    <tr>\r\n");
      out.write("	        <th>비밀번호</th>\r\n");
      out.write("	        <td>\r\n");
      out.write("	        	<input type=\"password\" name=\"pwd\" id=\"pwd\" size=\"40\" placeholder=\"비밀번호 입력\">\r\n");
      out.write("	        	<!-- 비밀번호를 수정할 수 있는 입력 필드 -->\r\n");
      out.write("	        	<div id=\"pwdDiv\"></div>\r\n");
      out.write("	        	<!-- 비밀번호 유효성 검사 메시지가 표시될 영역 -->\r\n");
      out.write("	        </td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    <tr>\r\n");
      out.write("	        <th>재확인</th>\r\n");
      out.write("	        <td>\r\n");
      out.write("	        	<input type=\"password\" id=\"repwd\" size=\"40\" placeholder=\"비밀번호 입력\">\r\n");
      out.write("	        	<!-- 비밀번호 확인 입력 필드, 비밀번호 일치 여부를 확인하는 데 사용 -->\r\n");
      out.write("	        </td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    <tr>\r\n");
      out.write("	        <th>성별</th>\r\n");
      out.write("	        <td>\r\n");
      out.write("	        	<input type=\"radio\" name=\"gender\" value=\"0\" />남자\r\n");
      out.write("	            <input type=\"radio\" name=\"gender\" value=\"1\" />여자\r\n");
      out.write("	            <!-- 성별을 선택할 수 있는 라디오 버튼, 데이터베이스에서 값을 읽어와 자동 선택 -->\r\n");
      out.write("	        </td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    <tr>\r\n");
      out.write("	        <th>이메일</th>\r\n");
      out.write("	        <td>\r\n");
      out.write("	        	<input type=\"email\" name=\"email1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.email1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("	        	<!-- 이메일 앞부분 입력 -->\r\n");
      out.write("	        	@\r\n");
      out.write("	        	<input type=\"text\" name=\"email2\" id=\"email2\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.email2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("	        	<!-- 이메일 도메인 부분을 입력 -->\r\n");
      out.write("	        	\r\n");
      out.write("	        	<input type=\"email\" name=\"email3\" id=\"email3\" list=\"email3_list\" oninput=\"change()\">        \r\n");
      out.write("	        	<datalist id=\"email3_list\">\r\n");
      out.write("	        		<!-- 이메일 도메인 선택을 위한 datalist, 사용자는 직접 입력하거나 선택 가능 -->\r\n");
      out.write("	        		<option value=\"직접입력\"></option>\r\n");
      out.write("	                <option value=\"naver.com\"/>\r\n");
      out.write("	                <option value=\"gmail.com\"/>\r\n");
      out.write("	                <option value=\"daum.net\"/>\r\n");
      out.write("	        	</datalist>\r\n");
      out.write("	        </td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    <tr>\r\n");
      out.write("	        <th>휴대전화</th>\r\n");
      out.write("	        <td>\r\n");
      out.write("	            <select name=\"tel1\">\r\n");
      out.write("	                <optgroup label=\"hp\">\r\n");
      out.write("	                    <!-- 휴대전화 앞자리를 선택할 수 있도록 제공 -->\r\n");
      out.write("	                    <option value=\"010\">010</option>\r\n");
      out.write("	                    <option value=\"011\">011</option>\r\n");
      out.write("	                    <option value=\"019\">019</option>\r\n");
      out.write("	                </optgroup>\r\n");
      out.write("	            </select>\r\n");
      out.write("		         -\r\n");
      out.write("		         <input type=\"text\" name=\"tel2\" size=\"4\" maxlength=\"4\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.tel1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("		         <!-- 전화번호 중간 자리 입력 -->\r\n");
      out.write("		         -\r\n");
      out.write("		         <input type=\"text\" name=\"tel3\" size=\"4\" maxlength=\"4\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.tel2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("		         <!-- 전화번호 마지막 자리 입력 -->\r\n");
      out.write("			</td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    <tr>\r\n");
      out.write("	    	<th>주소</th>\r\n");
      out.write("	    	<td>\r\n");
      out.write("	    		<input type=\"text\" name=\"zipcode\" id=\"zipcode\" size=\"6\" readonly value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.zipcode }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("	    		<!-- 우편번호는 직접 입력이 불가하며 버튼을 통해 검색하도록 함 -->\r\n");
      out.write("	    		<button type=\"button\" onclick=\"checkPost(); return false;\">우편번호 검색</button><br/>\r\n");
      out.write("	    		<input type=\"text\" name=\"addr1\" id=\"addr1\" size=\"60\" readonly value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.addr1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><br/>\r\n");
      out.write("	    		<!-- 주소 입력 필드, addr1은 기본 주소, addr2는 상세 주소를 입력 -->\r\n");
      out.write("	    		<input type=\"text\" name=\"addr2\" id=\"addr2\" size=\"60\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.addr2 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("	    	</td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	    \r\n");
      out.write("	    <tr>\r\n");
      out.write("	    	<td colspan=\"2\" align=\"center\">\r\n");
      out.write("	    		<input type=\"button\" value=\"회원정보수정\" id=\"updateBtn\" />\r\n");
      out.write("	    		<!-- '회원정보 수정' 버튼 클릭 시 JavaScript로 유효성 검사 후 서버로 데이터 전송 -->\r\n");
      out.write("	    		<input type=\"reset\" value=\"다시작성\" onclick=\"location.reload()\" />\r\n");
      out.write("	    		<!-- '다시작성' 버튼 클릭 시 페이지를 새로고침하여 입력 필드를 초기화 -->\r\n");
      out.write("	    	</td>\r\n");
      out.write("	    </tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<!-- jQuery 라이브러리를 사용하여 다양한 이벤트 및 동작을 제어 -->\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<!-- Daum 주소 검색 API를 사용해 우편번호 및 주소 검색 -->\r\n");
      out.write("<script src=\"../js/member.js\"></script>\r\n");
      out.write("<!-- 회원 정보 수정과 관련된 JavaScript 파일을 외부에서 불러옴 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("window.onload = function(){\r\n");
      out.write("	document.updateForm.gender['");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.gender }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'].checked = true;\r\n");
      out.write("	// 사용자가 저장한 성별 정보에 맞게 라디오 버튼을 자동으로 선택\r\n");
      out.write("	document.updateForm.tel1.value = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${memberDTO.tel1 }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("	// 사용자의 휴대전화 첫 번째 번호를 자동으로 선택\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
