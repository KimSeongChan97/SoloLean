/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-09-05 09:23:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberLoginForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인 페이지</title>\r\n");
      out.write("<!-- CSS 파일 링크 -->\r\n");
      out.write("<!-- 로그인 페이지에 적용될 스타일을 logincss.css 파일로부터 가져옵니다. \r\n");
      out.write("     이 파일은 /projectJSP/css/ 디렉터리에 있으며, 해당 파일을 통해 페이지의 레이아웃과 디자인이 적용됩니다. -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/projectJSP/css/logincss.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- 네비게이션 바를 포함 -->\r\n");
      out.write("<!-- jsp:include 태그를 사용하여 별도의 JSP 파일(nav.jsp)을 현재 페이지에 포함합니다. \r\n");
      out.write("     nav.jsp 파일에는 사이트 상단에 표시될 네비게이션 바의 코드가 들어 있으며, 이를 재사용하여 코드 중복을 줄일 수 있습니다. -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/jsp/nav.jsp", out, false);
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!-- 페이지 제목을 중앙에 배치하고, Comic Sans MS 폰트를 적용합니다. -->\r\n");
      out.write("<h2 align=\"center\" style=\"font-family: 'Comic Sans MS';\" style=\"cursor: pointer;\" \r\n");
      out.write("	 onclick=\"location.href='../index.jsp'\" > L o g i n </h2>\r\n");
      out.write("<hr/>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 로그인 폼 -->\r\n");
      out.write("<!-- 로그인 폼을 생성하여 사용자가 아이디와 비밀번호를 입력하고 로그인을 시도할 수 있게 합니다. -->\r\n");
      out.write("<div>\r\n");
      out.write("<form name=\"memberloginForm\" >\r\n");
      out.write("    <table>\r\n");
      out.write("        <!-- 아이디 입력 필드 -->\r\n");
      out.write("        <!-- 사용자로부터 아이디를 입력받는 필드입니다. id 속성을 사용하여 JavaScript에서 쉽게 접근할 수 있게 했습니다. -->\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>아이디</td>\r\n");
      out.write("            <td>\r\n");
      out.write("                <input type=\"text\" name=\"id\" id=\"id\" placeholder=\"아이디 입력\" />\r\n");
      out.write("                <div id=\"loginIdDiv\"></div> <!-- 아이디 오류 메시지를 표시할 공간입니다. 아이디가 입력되지 않으면 이곳에 오류 메시지가 표시됩니다. -->\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <!-- 비밀번호 입력 필드 -->\r\n");
      out.write("        <!-- 사용자로부터 비밀번호를 입력받는 필드입니다. 비밀번호는 숨김 처리되며, JavaScript에서 접근할 수 있도록 id를 설정했습니다. -->\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>비밀번호</td>\r\n");
      out.write("            <td>\r\n");
      out.write("                <input type=\"password\" name=\"pwd\" id=\"pwd\" placeholder=\"비밀번호 입력\" />\r\n");
      out.write("                <div id=\"loginpwdDiv\"></div> <!-- 비밀번호 오류 메시지를 표시할 공간입니다. 비밀번호가 입력되지 않으면 이곳에 오류 메시지가 표시됩니다. -->\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("\r\n");
      out.write("        <!-- 로그인 및 회원가입 버튼 -->\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td colspan=\"2\" align=\"center\">\r\n");
      out.write("                <!-- 로그인 버튼을 클릭하면 로그인 요청이 처리됩니다. id=\"loginBtn\"으로 JavaScript에서 이 버튼에 이벤트를 걸 수 있게 했습니다. -->\r\n");
      out.write("                <input type=\"submit\" value=\"로그인\" id=\"loginBtn\" />\r\n");
      out.write("                <!-- 회원가입 버튼을 클릭하면 회원가입 페이지로 이동합니다. 회원가입 폼을 불러올 수 있도록 window.location.href로 페이지 이동이 설정되어 있습니다. -->\r\n");
      out.write("                <input type=\"button\" value=\"회원가입\" onclick=\"window.location.href='/projectJSP/member/memberWriteForm.jsp';\" />\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    \r\n");
      out.write("   \r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- jQuery 라이브러리 추가 -->\r\n");
      out.write("<!-- jQuery는 JavaScript 라이브러리로, DOM 조작, 이벤트 처리, AJAX 등을 쉽게 할 수 있도록 도와줍니다. \r\n");
      out.write("     여기서는 jQuery의 최신 버전을 사용하기 위해 CDN을 통해 jQuery를 로드합니다. -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- JavaScript 코드 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() {\r\n");
      out.write("    // 로그인 버튼 클릭 시 작동하는 이벤트 리스너\r\n");
      out.write("    $('#loginBtn').click(function() {\r\n");
      out.write("        $('#loginIdDiv').empty();\r\n");
      out.write("        $('#loginpwdDiv').empty();\r\n");
      out.write("        \r\n");
      out.write("        // 아이디 입력 필드를 검사\r\n");
      out.write("        if ($('#id').val() == '') {\r\n");
      out.write("            $('#loginIdDiv').html('아이디를 입력하세요');\r\n");
      out.write("            \r\n");
      out.write("        } else if ($('#pwd').val() == '') {\r\n");
      out.write("            $('#loginpwdDiv').html('비밀번호를 입력하세요');\r\n");
      out.write("            \r\n");
      out.write("        } else {\r\n");
      out.write("            // 모든 입력이 완료되면 AJAX로 서버에 로그인 요청을 보냅니다.\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type: 'post',\r\n");
      out.write("                url: 'memberLogin.jsp',  // 로그인 처리 로직을 포함하는 JSP 파일의 URL\r\n");
      out.write("                data: {\r\n");
      out.write("                    'id': $('#id').val(),  // 사용자가 입력한 아이디\r\n");
      out.write("                    'pwd': $('#pwd').val(),  // 사용자가 입력한 비밀번호\r\n");
      out.write("                },\r\n");
      out.write("                dataType: 'text',  // 서버로부터 전달받을 데이터 형식\r\n");
      out.write("                success: function(data) {\r\n");
      out.write("                    if (data.trim() == 'fail') {\r\n");
      out.write("                        alert(\"아이디 또는 비밀번호가 틀렸습니다.\");\r\n");
      out.write("                        return false;  // 로그인 실패 시 폼 제출 방지\r\n");
      out.write("                    } else {\r\n");
      out.write("                        alert(data.trim() + \" 님 로그인 되었습니다.\");\r\n");
      out.write("                        \r\n");
      out.write("                        // 로그인 성공 시 index.jsp로 이동\r\n");
      out.write("                        window.location.href = \"/projectJSP/index.jsp\";  // index.jsp로 페이지 이동\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function(e) {\r\n");
      out.write("                    console.log(e);  // 에러 발생 시 콘솔에 출력\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            return false;  // AJAX 요청이 완료되기 전에 폼이 제출되지 않도록 방지\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
