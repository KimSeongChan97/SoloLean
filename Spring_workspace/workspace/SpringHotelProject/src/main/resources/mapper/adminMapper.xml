<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="admin.dao.AdminDAO">
 	<select id="checkUser" parameterType="map" resultType="userDTO">
 		SELECT * FROM user limit #{startNum}, #{endNum}
 	</select>
 	
 	<select id="getTotalA" resultType="int">
 		SELECT COUNT(*) FROM user
 	</select>
	 	
	<select id="getRoomListWithImages" resultMap="roomWithImgMap">
	    SELECT 
	        r.roomId, r.type, r.size, r.capacity, r.price, r.count,
	        ri.imageFileName, ri.imageOriginalFileName
	    FROM room r
	    LEFT JOIN roomImg ri ON r.roomId = ri.roomId
	</select>
	
	<resultMap id="roomWithImgMap" type="roomDTO">
	    <id property="roomId" column="roomId"/>
	    <result property="type" column="type"/>
	    <result property="size" column="size"/>
	    <result property="capacity" column="capacity"/>
	    <result property="price" column="price"/>
	    <result property="count" column="count"/>
	    <result property="description" column="description"/>
	    <result property="form" column="form"/>
	    <result property="view" column="view"/>
	    <result property="bedtype" column="bedtype"/>
	    <association property="roomImg" javaType="roomImgDTO">
	        <id property="roomImgId" column="roomImgId"/>
	        <result property="imageFileName" column="imageFileName"/>
	        <result property="imageOriginalFileName" column="imageOriginalFileName"/>
	    </association>
	</resultMap>

 	
 	<select id="getRoomDTO" parameterType="int" resultMap="roomWithImgMap">
		SELECT 
		    r.roomId, 
		    r.type, 
		    r.size, 
		    r.capacity, 
		    r.price, 
		    r.count, 
		    r.description,
		    r.form, 
		    r.view, 
		    r.bedtype,
		    ri.roomImgId, 
		    ri.imageFileName, 
		    ri.imageOriginalFileName
		FROM room r
		LEFT JOIN roomImg ri ON r.roomId = ri.roomId
		WHERE r.roomId = #{roomId}
 	</select>
 	
 	<select id="getQuestionsDTO" parameterType="String" resultType="questionsDTO">
 		SELECT * FROM questions where questionsId = #{questionsId}
 	</select>
 	
 	<select id="getRoomImgDTO" parameterType="String" resultType="roomImgDTO">
 		SELECT * FROM roomImg WHERE roomId = #{roomId}
 	</select>
 	
 	<update id="updateRoom" parameterType="roomDTO">
        UPDATE room
        SET type = #{type}, size = #{size}, capacity = #{capacity},
            price = #{price}, count = #{count}
        WHERE roomId = #{roomId}
    </update>

    <update id="updateRoomImg" parameterType="roomImgDTO">
        UPDATE roomImg
        SET imageFileName = #{imageFileName}, imageOriginalFileName = #{imageOriginalFileName}
        WHERE roomImgId = #{roomImgId}
    </update>
    
    <select id="checkReserve" resultType="reserveDTO">
        SELECT r.reserveId AS reserveId,
               r.roomId AS roomId,
               r.adults,
               r.kids,
               r.checkin,
               r.checkout,
               rm.type AS roomType,  <!-- RoomDTO의 type을 가져옴 -->
               r.price,
               r.time
        FROM reserve r
        JOIN room rm ON r.roomId = rm.roomId
        LIMIT #{startNum}, #{endNum}
    </select>

    <select id="getTotalB" resultType="int">
        SELECT COUNT(*) FROM reserve;
    </select>
    
	<select id="inquiryList" parameterType="map" resultType="questionsDTO">
	    SELECT q.*, qt.typename, u.name AS userName, u.seq 
	    FROM questions q
	    LEFT JOIN qtypes qt ON q.qtypesId = qt.qtypesId 
	    LEFT JOIN user u ON q.userid = u.seq
	    ORDER BY q.questionsId DESC 
	    LIMIT #{startNum}, #{endNum};
	</select>
	
	<select id="getCommentsByQuestionId" parameterType="int" resultType="answerDTO">
		select * from answer where questionsId = #{questionsId}
	</select> 
	
    <select id="getTotalC" resultType="int">
        SELECT COUNT(*) FROM questions;
    </select>
    
    <insert id="writeComment" parameterType="answerDTO">
	    INSERT INTO answer (questionsId, adminId, userId, comment, logdate)
	    VALUES (#{questionsId}, #{adminId}, #{userId}, #{comment}, NOW());
	</insert>
	
	<select id="adminCheck" parameterType="map" resultType="int">
        SELECT COUNT(*) 
        FROM admin
        WHERE adminId = #{adminId}
        AND pwd = #{pwd}
    </select>
    
    <update id="updateComment" parameterType="map">
        UPDATE answer
        SET comment = #{comment}
        WHERE answerId = #{answerId}
    </update>

    <delete id="deleteComment">
        DELETE FROM answer
        WHERE answerId = #{answerId}
    </delete>
    
    <insert id="saveQuestion" parameterType="questions.bean.QuestionsDTO">
        INSERT INTO questions (userId, content, qtypesId, isAnswered, logtime)
        VALUES (#{userId}, #{content}, #{qtypesId}, false, NOW());
    </insert>
    
    <select id="getUserIdByUserName" parameterType="String" resultType="int">
    	select seq from user where name = #{userName}
    </select>
    
    <update id="updateInquiry" parameterType="map">
        UPDATE questions
        SET content = #{content}, qtypesId = #{typename}  
        WHERE questionsId = #{questionsId}
    </update>
    
    <delete id="deleteQuestions">
      	DELETE FROM questions
        WHERE questionsId = #{questionsId}
    </delete>
 </mapper>