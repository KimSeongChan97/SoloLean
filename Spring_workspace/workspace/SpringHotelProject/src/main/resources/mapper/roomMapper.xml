<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="room.dao.RoomDAO">

    <!-- 모든 room 정보 가져오기 (room + roomimg) -->
    <select id="getAllRooms" resultMap="roomResultMap">
        SELECT r.roomid, upper(r.`type`) as type, r.`size`, r.capacity, r.price, r.count, r.description, r.form, r.`view`, r.bedtype, ri.imageFileName 
        FROM room r 
        LEFT JOIN roomimg ri ON r.roomid = ri.roomid
    </select>

    <!-- RoomDTO와 RoomImgDTO 간의 매핑 정의 -->
    <resultMap id="roomResultMap" type="room.bean.RoomDTO">
        <id property="roomId" column="roomid" />
        <result property="type" column="type" />
        <result property="size" column="size" />
        <result property="capacity" column="capacity" />
        <result property="price" column="price" />
        <result property="count" column="count" />
        <result property="description" column="description" />
        <result property="form" column="form" />
        <result property="view" column="view" />
        <result property="bedtype" column="bedtype" />
        <!-- roomImg와의 association -->
        <association property="roomImg" javaType="room.bean.RoomImgDTO">
            <result property="imageFileName" column="imageFileName" />
        </association>
    </resultMap>
    
    <!-- 객실 ID로 객실 정보 가져오기 -->
    <select id="getRoomById" parameterType="int" resultMap="roomResultMap">
        SELECT r.roomid, upper(r.`type`) as type, r.`size`, r.capacity, r.price, r.count, r.description, r.form, r.`view`, r.bedtype, ri.imageFileName 
        FROM room r
        LEFT JOIN roomimg ri ON r.roomid = ri.roomid
        WHERE r.roomid = #{roomId}
    </select>

    <!-- 객실 ID로 이미지 정보 가져오기 -->
    <select id="getRoomImagesByRoomId" parameterType="int" resultType="room.bean.RoomImgDTO">
        SELECT roomImgId, roomId, imageFileName, imageOriginalFileName
        FROM roomimg
        WHERE roomId = #{roomId}
    </select>

	<select id="isWrite" parameterType="map">
		select count(*) 
		from room rm
		left join reserve re on re.roomid = rm.roomid 
		where re.userid = #{userSeq} and rm.roomid = #{roomId};
	</select>
</mapper>
