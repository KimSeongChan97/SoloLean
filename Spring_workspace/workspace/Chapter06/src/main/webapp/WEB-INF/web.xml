<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
 
<display-name>Chapter06</display-name>
  
  <!--
   WebApplicationContext
   => default : dispatcherServlet-servlet.xml
   이름이나 위치를 변경 contextConfigLocation
   -->
  <!--
        여기에서는 dispatcherServlet 서블릿을 정의합니다.
        아래 코드는 서블릿을 정의하는 부분으로, 서블릿은 웹 애플리케이션에서
        클라이언트 요청을 처리하고 응답을 생성하는 역할을 합니다.
    -->
  <servlet>
  	<servlet-name>dispatcherServlet</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  <!--
        servlet-class는 해당 서블릿이 어떤 클래스로 동작할지를 지정합니다.
        여기서 org.springframework.web.servlet.DispatcherServlet은 스프링 MVC의 핵심 서블릿으로,
        모든 HTTP 요청을 처리하고 적절한 컨트롤러로 라우팅하는 역할을 합니다.
        즉, 사용자가 웹 브라우저에서 요청을 하면 이 서블릿이 가장 먼저 요청을 받고
        알맞은 컨트롤러로 전달한 후 응답을 생성하여 사용자에게 보냅니다.
    -->
    <init-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
    </init-param>
    <!--
        init-param은 서블릿의 초기화 매개변수를 정의하는 데 사용됩니다. 여기에서는 contextConfigLocation이라는
        매개변수를 설정하여 스프링 설정 파일의 경로를 지정하고 있습니다. 즉, DispatcherServlet이
        애플리케이션을 초기화할 때 어떤 스프링 설정 파일을 로드할지를 지정하는 역할을 합니다.
        /WEB-INF/spring/appServlet/servlet-context.xml 경로에 있는 설정 파일이 스프링의
        WebApplicationContext로서 로드되어 서블릿이 사용하게 됩니다.
    -->
  </servlet>
  <servlet-mapping>
  <!--
        서블릿이 정의된 후, 해당 서블릿이 어느 URL 패턴에 매핑되는지를 지정합니다.
        즉, 이 서블릿은 어떤 경로로 접근할 때 호출될지를 결정합니다.
    -->
  	<servlet-name>dispatcherServlet</servlet-name>
  	<url-pattern>*.do</url-pattern>
  </servlet-mapping>  
   <!--
        url-pattern은 이 서블릿이 어떤 URL 요청을 처리할지를 지정합니다.
        여기서는 *.do로 끝나는 모든 요청을 dispatcherServlet이 처리하도록 설정했습니다.
        예를 들어, /example.do와 같은 요청이 오면 dispatcherServlet이 해당 요청을 처리합니다.
        .do는 주로 스프링 MVC에서 사용되던 확장자 패턴으로, 이러한 패턴을 통해 특정 서블릿으로
        요청을 일관되게 라우팅할 수 있습니다.
    -->
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>