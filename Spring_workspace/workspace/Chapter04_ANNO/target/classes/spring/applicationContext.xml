<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
<context:component-scan base-package="spring.conf" />
<!-- 
이 코드는 Spring 프레임워크에서 "spring.conf" 패키지 안에 있는 모든 클래스들을 스캔합니다. 
즉, "spring.conf" 패키지 내에서 @Component, @Service, @Repository, @Controller 등의 어노테이션이 달린 클래스들을 자동으로 빈(bean)으로 등록해줍니다.
이 기능을 사용하면 각 클래스마다 일일이 빈을 등록하지 않고도, 자동으로 등록할 수 있습니다.

추가 설명: 
Spring의 component-scan은 자동으로 클래스들을 찾아서 Spring 컨텍스트에 빈으로 등록해주는 역할을 합니다. 이를 통해 의존성 주입(Dependency Injection)을 간편하게 구현할 수 있습니다. 여기서는 "spring.conf"라는 패키지를 기준으로 빈을 검색합니다.
-->

<!--
 <context:component-scan base-package="user.main" />
 <context:component-scan base-package="user.bean" />
 <context:component-scan base-package="user.dao" />
 <context:component-scan base-package="user.service" />
 -->
<!--
이 주석된 부분은 각각의 패키지(user.main, user.bean, user.dao, user.service) 안의 클래스를 스캔하고, 빈으로 등록하는 역할을 합니다.
만약 주석을 해제하면 해당 패키지들에 속한 클래스들이 자동으로 빈으로 등록됩니다.
특히, 여러 개의 패키지를 개별적으로 스캔하고자 할 때 유용합니다.

추가 설명:
이 코드에서는 user.main, user.bean, user.dao, user.service 패키지 각각을 따로 스캔하도록 설정되어 있으나, 주석 처리되어 있어 현재는 작동하지 않습니다. 
주석을 해제하면 Spring이 해당 패키지 안의 클래스를 빈으로 자동 등록할 수 있습니다.
-->

<context:component-scan base-package="user.*" />
<!--
이 코드는 "user"로 시작하는 모든 패키지(user 하위의 모든 패키지)를 스캔합니다.
즉, user.*로 설정함으로써 user 패키지뿐만 아니라 그 하위 패키지들도 모두 포함하여 스캔할 수 있습니다. 예를 들어 user.main, user.bean, user.dao, user.service 같은 하위 패키지들이 모두 자동으로 스캔되고, 그 안의 @Component, @Service, @Repository, @Controller 어노테이션이 붙은 클래스들이 자동으로 빈으로 등록됩니다.

추가 설명:
"user.*"은 "user" 패키지 및 그 하위 패키지를 모두 스캔한다는 의미입니다. 이를 통해 패키지별로 따로 스캔 설정을 하지 않고도 user 패키지 전체를 한 번에 스캔할 수 있습니다. 이 설정 덕분에 주석 처리된 개별 스캔 구문들을 대체할 수 있습니다.
-->

	
</beans>
