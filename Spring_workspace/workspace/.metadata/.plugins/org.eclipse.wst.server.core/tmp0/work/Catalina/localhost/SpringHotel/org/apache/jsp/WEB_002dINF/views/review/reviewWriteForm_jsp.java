/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-10-18 00:51:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reviewWriteForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1728288794216L));
    _jspx_dependants.put("jar:file:/D:/Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringHotel/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"review-form-container\">\r\n");
      out.write("    <h2 class=\"text-center\">리뷰 작성</h2>\r\n");
      out.write("\r\n");
      out.write("    <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/review/insertReview\" method=\"post\">\r\n");
      out.write("        <input type=\"hidden\" name=\"roomId\" id=\"roomId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.roomId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("        <!-- Room ID -->\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"roomId\">Room ID:</label>\r\n");
      out.write("            <input type=\"text\" id=\"roomId\" name=\"roomId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${roomId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly class=\"form-control\" />\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- UserName -->\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"userName\">UserName :</label>\r\n");
      out.write("            <input type=\"text\" id=\"userName\" name=\"userName\" value=\"userName\" class=\"form-control\" />\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Rating (별점) -->\r\n");
      out.write("        <div class=\"form-group star-rating-container\">\r\n");
      out.write("            <label for=\"rating\">Rating:</label>\r\n");
      out.write("            <div class=\"star-rating\">\r\n");
      out.write("                <input type=\"radio\" id=\"star5\" name=\"rating\" value=\"5\" required />\r\n");
      out.write("                <label for=\"star5\" class=\"full\" title=\"5 stars\">5</label>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"radio\" id=\"star4\" name=\"rating\" value=\"4\" />\r\n");
      out.write("                <label for=\"star4\" class=\"full\" title=\"4 stars\">4</label>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"radio\" id=\"star3\" name=\"rating\" value=\"3\" />\r\n");
      out.write("                <label for=\"star3\" class=\"full\" title=\"3 stars\">3</label>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"radio\" id=\"star2\" name=\"rating\" value=\"2\" />\r\n");
      out.write("                <label for=\"star2\" class=\"full\" title=\"2 stars\">2</label>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"radio\" id=\"star1\" name=\"rating\" value=\"1\" />\r\n");
      out.write("                <label for=\"star1\" class=\"full\" title=\"1 star\">1</label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div id=\"rating-value\" class=\"text-left mt-2\">선택한 점수: 없음</div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Comment -->\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"comment\">Comment:</label>\r\n");
      out.write("            <textarea id=\"comment\" name=\"comment\" rows=\"4\" class=\"form-control\" required></textarea>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Submit and List Buttons -->\r\n");
      out.write("        <div class=\"text-center\">\r\n");
      out.write("            <button type=\"submit\" class=\"btn btn-primary\">리뷰 작성</button>\r\n");
      out.write("            <input type=\"button\" class=\"btn btn-success\" value=\"List\" onclick=\"window.location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/review/reviewList';\">\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    // 별점을 선택하면 그 값을 아래에 보여주는 스크립트\r\n");
      out.write("    document.querySelectorAll('.star-rating input[type=\"radio\"]').forEach(function (radio) {\r\n");
      out.write("        radio.addEventListener('change', function () {\r\n");
      out.write("            document.getElementById('rating-value').textContent = '선택한 점수: ' + this.value + '점';\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
