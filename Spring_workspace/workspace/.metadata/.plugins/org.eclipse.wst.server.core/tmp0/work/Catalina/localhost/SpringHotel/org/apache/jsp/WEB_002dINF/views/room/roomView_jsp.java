/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-10-20 01:46:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.room;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class roomView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1728288794216L));
    _jspx_dependants.put("jar:file:/D:/Spring/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringHotel/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/SpringHotel/resources/css/bootstrap.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/SpringHotel/resources/css/footer.css\">\r\n");
      out.write("    <link rel=\"icon\" href=\"/SpringHotel/resources/static/favicon.ico\" type=\"image/x-icon\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/SpringHotel/resources/css/room.css\">\r\n");
      out.write("    <title>Room Information - Hotel S&H</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <!-- header -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container main\" data-view=\"roomView\">\r\n");
      out.write("        <!-- 페이지 타이틀 -->\r\n");
      out.write("        <h2 class=\"my-4 text-center\">\r\n");
      out.write("            <i class=\"fas fa-bed\"></i> 객실 정보\r\n");
      out.write("        </h2>\r\n");
      out.write("\r\n");
      out.write("        <!-- Bootstrap Carousel 사용 -->\r\n");
      out.write("        <div id=\"roomCarousel\" class=\"carousel slide main\" data-bs-ride=\"carousel\">\r\n");
      out.write("            <div class=\"carousel-inner\">\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("    \r\n");
      out.write("		    <!-- 부대시설 정보 섹션 -->\r\n");
      out.write("		    <div class=\"amenity-section bg-light p-4 rounded\">\r\n");
      out.write("		        <h3><i class=\"fas fa-dumbbell\"></i> 부대시설</h3>\r\n");
      out.write("		        <table class=\"table\">\r\n");
      out.write("		            <!-- 부대시설 정보 나열 -->\r\n");
      out.write("		            <tr>\r\n");
      out.write("		                <td>\r\n");
      out.write("		                    <h4><i class=\"fas fa-check-circle\"></i> 피트니스 센터 무료 이용</h4>\r\n");
      out.write("		                    <ul class=\"list-unstyled\">\r\n");
      out.write("		                        <li>이용 가능 시간: 06:00 ~ 22:00</li>\r\n");
      out.write("		                    </ul>\r\n");
      out.write("		                </td>\r\n");
      out.write("		            </tr>\r\n");
      out.write("		            <tr>\r\n");
      out.write("		                <td>\r\n");
      out.write("		                    <h4><i class=\"fas fa-calendar-alt\"></i> 피트니스 센터 휴일</h4>\r\n");
      out.write("		                    <ul class=\"list-unstyled\">\r\n");
      out.write("		                        <li>매월 세 번째 수요일 정기 휴일</li>\r\n");
      out.write("		                    </ul>\r\n");
      out.write("		                </td>\r\n");
      out.write("		            </tr>\r\n");
      out.write("		            <tr>\r\n");
      out.write("		                <td>\r\n");
      out.write("		                    <h4><i class=\"fas fa-swimmer\"></i> 실내 수영장</h4>\r\n");
      out.write("		                    <ul class=\"list-unstyled\">\r\n");
      out.write("		                        <li>만 13세 이상 입장 가능</li>\r\n");
      out.write("		                        <li>이용 가능 시간: 07:00 ~ 21:00</li>\r\n");
      out.write("		                    </ul>\r\n");
      out.write("		                </td>\r\n");
      out.write("		            </tr>\r\n");
      out.write("		            <tr>\r\n");
      out.write("		                <td>\r\n");
      out.write("		                    <h4><i class=\"fas fa-hot-tub\"></i> 사우나</h4>\r\n");
      out.write("		                    <ul class=\"list-unstyled\">\r\n");
      out.write("		                        <li>유료 이용</li>\r\n");
      out.write("		                        <li>이용 가능 시간: 07:00 ~ 22:00</li>\r\n");
      out.write("		                    </ul>\r\n");
      out.write("		                </td>\r\n");
      out.write("		            </tr>\r\n");
      out.write("		            <tr>\r\n");
      out.write("		                <td>\r\n");
      out.write("		                    <h4><i class=\"fas fa-parking\"></i> 무료 주차</h4>\r\n");
      out.write("		                    <ul class=\"list-unstyled\">\r\n");
      out.write("		                        <li>투숙 기간 내 무료 주차 가능</li>\r\n");
      out.write("		                    </ul>\r\n");
      out.write("		                </td>\r\n");
      out.write("		            </tr>\r\n");
      out.write("		        </table>\r\n");
      out.write("		    </div>\r\n");
      out.write("	\r\n");
      out.write("			<!-- 호텔 정보 섹션 -->\r\n");
      out.write("			<div class=\"hotel-info bg-light p-4 mt-5 rounded\">\r\n");
      out.write("				<h3>\r\n");
      out.write("					<i class=\"fas fa-hotel\"></i> 호텔 정보\r\n");
      out.write("				</h3>\r\n");
      out.write("				<table class=\"table\">\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>\r\n");
      out.write("							<h4>\r\n");
      out.write("								<i class=\"fas fa-utensils\"></i> 조식 이용 안내\r\n");
      out.write("							</h4>\r\n");
      out.write("							<ul class=\"list-unstyled\">\r\n");
      out.write("								<li>다이닝 존 (뷔페) : 07:30 ~ 10:30</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>\r\n");
      out.write("							<h4>\r\n");
      out.write("								<i class=\"fas fa-clock\"></i> 체크인 / 체크아웃 시간\r\n");
      out.write("							</h4>\r\n");
      out.write("							<ul class=\"list-unstyled\">\r\n");
      out.write("								<li>체크인 : 오후 2시 이후</li>\r\n");
      out.write("								<li>체크아웃 : 오전 11시</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>\r\n");
      out.write("							<h4>\r\n");
      out.write("								<i class=\"fas fa-calendar-times\"></i> 예약 취소/변경 및 No-Show 안내\r\n");
      out.write("							</h4>\r\n");
      out.write("							<ul class=\"list-unstyled\">\r\n");
      out.write("								<li>숙박 예정일 7일 전: 위약금 없음</li>\r\n");
      out.write("								<li>숙박 예정일 6일 전 ~ 1일 전 : 1박 요금의 20%</li>\r\n");
      out.write("								<li>숙박 예정일 1일 전 (18시 이후 취소 및 변경): 1박 요금의 80%</li>\r\n");
      out.write("							</ul>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("	    	</div>\r\n");
      out.write("	    </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- footer -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("    <!-- 최신 jQuery -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("        integrity=\"sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"/SpringHotel/resources/js/bootstrap.js\"></script>\r\n");
      out.write("    <script src=\"/SpringHotel/resources/js/header.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/room/roomView.jsp(29,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("room");
      // /WEB-INF/views/room/roomView.jsp(29,16) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/room/roomView.jsp(29,16) '${rooms}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${rooms}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/room/roomView.jsp(29,16) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                    <div class=\"carousel-item ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index == 0 ? 'active' : ''}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                        <div class=\"card shadow-sm roomInfo\">\r\n");
            out.write("                            <img class=\"card-img-top\"\r\n");
            out.write("                                src=\"https://kr.object.ncloudstorage.com/springhotel/storage/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.roomImg.imageFileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("                                alt=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\r\n");
            out.write("                            <div class=\"card-body\">\r\n");
            out.write("                                <h5 class=\"card-title\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</h5>\r\n");
            out.write("                                <p class=\"card-text\">크기: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.size}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("m² | 수용 인원: ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.capacity}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("명</p>\r\n");
            out.write("                                <p class=\"card-text\">가격: ₩");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.price}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("                                <p class=\"card-text\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.description}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</p>\r\n");
            out.write("                                <div class=\"d-flex justify-content-between align-items-center\">\r\n");
            out.write("                                    <button class=\"btn btn-outline-primary\"\r\n");
            out.write("                                        onclick=\"location.href='");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("/room/detail/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${room.roomId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'\">\r\n");
            out.write("                                        상세 보기\r\n");
            out.write("                                    </button>\r\n");
            out.write("                                    <button class=\"btn btn-primary\">예약</button>\r\n");
            out.write("                                </div>\r\n");
            out.write("                            </div>\r\n");
            out.write("                        </div>\r\n");
            out.write("                    </div>\r\n");
            out.write("                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
