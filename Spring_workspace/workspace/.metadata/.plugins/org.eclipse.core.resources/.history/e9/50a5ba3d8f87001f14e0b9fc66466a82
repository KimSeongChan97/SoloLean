<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<annotation-driven />
	<!--
	[기존 주석] Spring에서 @Controller, @RequestMapping 같은 어노테이션을 활성화시켜줍니다.
	[추가 주석] 이 설정은 Spring MVC에서 어노테이션 기반의 기능을 활성화하는 설정입니다. 
	예를 들어, 컨트롤러 클래스에서 @RequestMapping과 같은 어노테이션을 사용할 수 있게 해주며, 자동으로 매핑과 데이터 바인딩을 처리할 수 있습니다.
	-->
	
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <beans:property name="prefix" value="/WEB-INF" />
	    <beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 
	[기존 주석] JSP 파일의 경로를 설정하는 뷰 리졸버입니다.
	[추가 주석] 이 설정은 `InternalResourceViewResolver`라는 Spring의 뷰 리졸버를 사용하여, 클라이언트 요청에 대한 응답으로 JSP 파일을 찾고 반환하는 역할을 합니다.
	- `prefix`는 JSP 파일이 위치한 경로의 앞부분을 정의하며, 여기서는 "/WEB-INF" 경로입니다.
	- `suffix`는 JSP 파일의 확장자를 정의하며, 여기서는 ".jsp"로 설정되어 있어, 모든 JSP 파일을 사용할 때 이 확장자가 자동으로 붙습니다.
	결과적으로, 뷰 이름이 "home"이면 "/WEB-INF/home.jsp" 파일을 찾아 반환하게 됩니다.
	-->
	
	<!-- 이미지 업로드 리졸버 잡기 -->
	<beans:bean class="">
	
	</beans:bean>
	
	<context:component-scan base-package="com.controller.SpringProject" />
	<context:component-scan base-package="user.controller" />
	<!--
	[기존 주석] 컨트롤러가 위치한 패키지를 스캔합니다.
	[추가 주석] 이 설정은 Spring이 지정한 패키지 내의 클래스들을 스캔하여 @Controller, @Service, @Repository 같은 어노테이션이 붙은 클래스를 자동으로 등록하게 해줍니다. 
	- `base-package`는 검색할 패키지를 정의하며, 여기서는 `com.controller.SpringProject`와 `user.controller` 패키지 내의 클래스를 스캔하게 됩니다.
	이렇게 패키지를 스캔하여 해당 클래스들이 자동으로 빈(bean)으로 등록됩니다.
	-->
	
	<resources location="/WEB-INF/css/" mapping="/css/**" />
	<resources location="/WEB-INF/js/" mapping="/js/**" />
	<resources location="/WEB-INF/image/" mapping="/image/**" />
	<!-- 
	[기존 주석] 정적 리소스 파일 경로를 설정합니다.
	[추가 주석] 이 설정은 CSS, JavaScript, 이미지와 같은 정적 리소스 파일을 브라우저가 요청할 때, 해당 파일들의 경로를 매핑하여 제공하는 역할을 합니다.
	- `location`은 실제 파일들이 위치한 경로를 의미하며, JSP와 같은 동적 페이지가 아닌 정적 파일들이 있는 디렉터리를 지정합니다. 예를 들어, CSS 파일은 "/WEB-INF/css/" 폴더에 저장됩니다.
	- `mapping`은 브라우저가 요청하는 URL 패턴을 의미합니다. 예를 들어, 사용자가 "/css/style.css"와 같은 URL을 요청하면 Spring이 "/WEB-INF/css/style.css" 파일을 반환하게 됩니다.
	이렇게 설정하면 외부에서 요청한 경로와 실제 파일의 위치를 연결해 줍니다.
	-->

	
	
</beans:beans>
