<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

<bean id="messageBeanImpl" class="sample01.MessageBeanImpl">
    <!-- messageBeanImpl이라는 ID를 가진 Bean을 정의하고, sample01 패키지의 MessageBeanImpl 클래스를 사용 -->
    <!-- 'str'이라는 속성(property)에 "Have a nice day!!"라는 문자열 값을 주입 (setter 주입 방식) -->
    <property name="str" value="Have a nice day!!" />
</bean>

<bean id="loggingAdvice" class="sample01.LoggingAdvice" >
    <!-- loggingAdvice라는 ID를 가진 Bean을 정의하고, sample01 패키지의 LoggingAdvice 클래스를 사용 -->
    <!-- 이 Bean은 공통 관심 사항을 처리하기 위한 Advice 클래스 역할을 합니다 -->
</bean>

<!-- AOP -->
<aop:config>
    <!-- aop:pointcut: 실행 지점을 정의하는 부분입니다. 메서드 실행을 가로채기 위한 포인트컷을 정의 -->
    <!-- expression: 포인트컷에 해당하는 메서드의 패턴을 명시 -->
    <!-- 접근제어자: public, 반환형: void, 패키지명: sample01, 클래스명: MessageBeanImpl, 메서드명: 임의의 메서드명이 .*Before로 끝나는 메서드 -->
    <!-- 이 표현식에 매칭되는 메서드를 대상으로 AOP가 적용됩니다 -->
    <!-- execution(접근제어자 반환형 패키지명.클래스명.메서드명(파라미터))-->
    <!-- execution(public * *.*.*After(..)) -->	
    <aop:pointcut 
        expression="execution(public void sample01.MessageBeanImpl.*Before(..))"
        id="beforeMethod"/>
    <aop:pointcut 
    	expression="execution(public void sample01.MessageBeanImpl.*After(..))" 
    	id="afterMethod"/>        
    <!-- 공통 관심 사항 (Aspect) 정의 -->
    <aop:aspect ref="loggingAdvice">
        <!-- 특정 메서드 실행 전(before)에 공통 관심 사항을 실행하는 설정 -->
        <!-- beforeTrace라는 메서드를 beforeMethod라는 포인트컷에 적용 -->
        <!-- 즉, MessageBeanImpl 클래스 내의 .*Before로 끝나는 메서드가 호출되기 전에 loggingAdvice의 beforeTrace 메서드를 실행 -->
        <aop:before method="beforeTrace" pointcut-ref="beforeMethod"/>
        <aop:after method="afterTrace" pointcut-ref="afterMethod"/>
    </aop:aspect>
	                
</aop:config>
<!-- 
execution(접근제어자 반환형 패키지명.클래스명.메서드명(파라미터))
위에서 사용된 execution 표현식은 AOP에서 실행 시점을 정의하는 문법입니다. 
'public void sample01.MessageBeanImpl.*Before(..)' 패턴에 매칭되는 메서드가 AOP 적용 대상입니다.
접근 제어자(public), 반환형(void), 패키지명(sample01), 클래스명(MessageBeanImpl), 메서드명은 *Before로 끝나며, 파라미터는 어떤 것이든 상관없음을 의미합니다.
-->

</beans>
