<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" > 
    <!-- InternalResourceViewResolver는 뷰 리졸버(뷰를 찾는 역할)를 구현한 클래스입니다. 
         이 클래스는 논리적인 뷰 이름을 실제 JSP 파일 경로로 변환해주는 역할을 합니다.
         예를 들어 "hello"라는 논리적 뷰 이름을 "/WEB-INF/hello.jsp"와 같은 실제 경로로 변환해줍니다. -->
    
    <property name="prefix" value="/WEB-INF/" ></property> <!-- jsp 파일명의 위치 -->
    <!-- prefix 속성은 논리적 뷰 이름에 앞서 붙는 경로를 설정합니다. 
         여기서는 "/WEB-INF/" 디렉토리를 설정하고 있습니다. 즉, 모든 JSP 파일은 이 경로 안에 있어야 합니다.
         예를 들어 "hello"라는 뷰 이름이 있을 때, 실제 JSP 파일 경로는 "/WEB-INF/hello.jsp"가 됩니다. -->
         
    <property name="suffix" value=".jsp" ></property>  <!-- 파일의 확장자명  -->
    <!-- suffix 속성은 논리적 뷰 이름에 뒤에 붙는 파일 확장자를 설정합니다.
         여기서는 ".jsp"로 설정되어 있어, 모든 뷰 이름이 JSP 파일로 변환됩니다.
         예를 들어 "hello"라는 뷰 이름이 있을 때, 실제 경로는 "/WEB-INF/hello.jsp"로 변환됩니다. -->
	</bean>

	<bean id="helloController" class="com.controller.HelloController">
	    <!-- helloController라는 ID로 HelloController 클래스를 Spring 빈으로 등록합니다.
	         이 빈은 com.controller 패키지의 HelloController 클래스에 대한 인스턴스입니다.
	         Spring에서 이 컨트롤러 빈을 사용하여 HTTP 요청을 처리하게 됩니다.
	         컨트롤러는 사용자가 보낸 요청을 처리하고, 그 결과를 뷰(JSP)로 반환하는 역할을 합니다. -->
	</bean>

	
	
</beans>
