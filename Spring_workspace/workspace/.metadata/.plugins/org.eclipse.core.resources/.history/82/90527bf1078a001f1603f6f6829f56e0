package user.service.impl;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import user.bean.UserUploadDTO;
import user.dao.UserUploadDAO;
import user.service.UserUploadService;

@Service
public class UserUploadServiceImpl implements UserUploadService {
		
		@Autowired
		private UserUploadDAO userUploadDAO;
		
		@Autowired
		private HttpSession session;
		
		@Override
		public void upload(List<UserUploadDTO> imageUploadList) {
			userUploadDAO.upload(imageUploadList);		
		}
	
		@Override
		public List<UserUploadDTO> uploadList() {
			return userUploadDAO.uploadList();
		}
		
		@Override
		public UserUploadDTO getuploadDTO(String seq) {
		
			return userUploadDAO.getuploadDTO(seq);
		}
		
		@Override
		public void uploadUpdate(UserUploadDTO userUploadDTO, MultipartFile img) {
			
			// 실제 폴더
			String filePath = session.getServletContext().getRealPath("WEB-INF/storage");  
			System.out.println("실제 폴더 = " + filePath);
			
			// Object Storage (NCP) 는 이미지를 덮어쓰지 않는다.
			// 기존 이미지를 삭제하고 나서 새로운 이미지를 넣어야 한다.
			// DB 에서 seq 에 해당하는 imageFileName 을 꺼내와서
			// Object Storage (NCP)의 이미지를 삭제하고,
			// 새로운 이미지를 업로드 한다.
			
			// seq 가져오기
			String imageFileName = userUploadDAO.getImageFileName(userUploadDTO.getSeq());
		    System.out.println("imageFileName = " + imageFileName); 
			
		    // 1. 이미지 삭제
		    
		    
			// 2. 새로운 객체 이미지 삽입
			
			
			
		}
		
}
