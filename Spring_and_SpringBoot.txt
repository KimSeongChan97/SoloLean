Spring_and_SpringBoot


1. 스프링(Spring Framework)
스프링은 자바 엔터프라이즈 애플리케이션 개발을 쉽게 하기 위해 만들어진 오픈 소스 프레임워크입니다. 주요 특징은 **의존성 주입(DI)**과 **AOP(Aspect-Oriented Programming)**입니다.

주요 특징
POJO 기반 개발: 스프링은 기존의 Java 객체(Plain Old Java Objects, POJO)를 사용할 수 있도록 지원하여, 복잡한 자바 EE 애플리케이션의 구조를 간단하게 만듭니다.
의존성 주입(DI, Dependency Injection): 객체 간의 의존성을 외부에서 주입받아 애플리케이션의 유연성을 높입니다.
AOP(Aspect-Oriented Programming): 보안, 로깅 등과 같은 부가적인 기능을 비즈니스 로직과 분리하여 개발할 수 있습니다.
트랜잭션 관리: 스프링은 선언적 트랜잭션 관리(주로 데이터베이스 관련 작업)를 지원합니다.
다양한 모듈 지원: 스프링은 웹, 데이터 접근, 보안, 메시징 등 다양한 기능을 제공하는 모듈을 포함합니다.
스프링의 구성 요소
스프링 코어(Core): DI와 AOP의 기능을 제공하는 핵심 모듈입니다.
스프링 MVC(Model-View-Controller): 웹 애플리케이션 개발에 사용되는 웹 모듈로, 요청을 처리하고 그 결과를 보여주는 MVC 패턴을 지원합니다.
스프링 데이터: 데이터베이스 연동을 단순화하는 모듈입니다. JPA, MyBatis 등의 ORM(객체 관계 매핑) 프레임워크와 함께 사용할 수 있습니다.
스프링 시큐리티(Security): 애플리케이션의 보안을 담당하는 모듈로, 인증과 권한 관리 기능을 제공합니다.
2. 스프링 부트(Spring Boot)
스프링 부트는 스프링 프레임워크를 더 쉽게 사용할 수 있도록 만든 프로젝트입니다. 기본적으로 스프링의 복잡한 설정을 줄이고, 개발자가 빠르게 애플리케이션을 구축할 수 있도록 돕습니다.

스프링 부트의 주요 특징
자동 설정(Auto Configuration): 스프링 부트는 기본적으로 다양한 설정을 자동으로 해주어, 개발자가 복잡한 설정 파일을 작성할 필요가 없습니다.
내장 서버(Embedded Server): 스프링 부트는 톰캣(Tomcat), 제티(Jetty) 등의 서버를 내장하고 있어 별도의 웹 서버 설정 없이 독립 실행형 애플리케이션을 쉽게 배포할 수 있습니다.
스타터 패키지(Starter Packages): 스프링 부트는 데이터베이스, 보안, 웹 등 여러 기능을 쉽게 사용할 수 있는 스타터 패키지를 제공합니다. 예를 들어, spring-boot-starter-web을 사용하면 웹 애플리케이션 개발에 필요한 의존성을 자동으로 추가할 수 있습니다.
의존성 관리: 프로젝트에서 필요한 의존성을 자동으로 관리해 주며, 버전 충돌 문제를 줄여 줍니다.
간편한 배포: 스프링 부트 애플리케이션은 JAR 파일로 패키징하여 쉽게 배포할 수 있습니다. 또한, CI/CD 환경에서 스프링 부트 애플리케이션을 매우 효율적으로 관리할 수 있습니다.

스프링 부트의 장점
빠른 애플리케이션 개발: 스프링 부트는 복잡한 설정을 줄여 주고, 개발을 빠르게 진행할 수 있게 해줍니다.
의존성 자동 관리: 필요에 따라 기본 의존성을 쉽게 추가하고 관리할 수 있습니다.
내장 서버: 외부 서버를 설정할 필요 없이 바로 애플리케이션을 실행할 수 있어 개발 환경 구축이 용이합니다.
프로덕션 준비 완료: 스프링 부트는 기본적으로 로그 관리, 모니터링, 보안 등의 기능이 준비되어 있어, 프로덕션 환경에서도 빠르게 배포할 수 있습니다.
스프링과 스프링 부트의 차이점
설정: 스프링은 설정을 일일이 작성해야 하지만, 스프링 부트는 많은 설정을 자동으로 해줍니다.
서버: 스프링은 외부 서버 설정이 필요하지만, 스프링 부트는 내장 서버를 제공합니다.
프로젝트 구조: 스프링 부트는 매우 간단한 구조로 애플리케이션을 시작할 수 있지만, 스프링은 처음부터 다양한 모듈을 설정해야 할 수 있습니다.

학습을 위한 주요 개념들
Spring MVC: 웹 애플리케이션의 컨트롤러와 뷰를 관리하는 핵심 패턴입니다.
JPA(Java Persistence API): 객체와 데이터베이스 간의 매핑을 도와주는 API로, 데이터베이스 연동을 단순화합니다. 스프링 데이터 JPA와 함께 자주 사용됩니다.
REST API: 웹 애플리케이션이 다른 애플리케이션과 통신할 수 있도록 하는 방식으로, 주로 JSON을 사용해 데이터를 주고받습니다.


============================================================================

Setting 부터...


























