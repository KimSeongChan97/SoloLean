함수형 프로그래밍이란?
함수를 정의하고 이 함수를 데이터 처리부로 보내 데이터를 처리하는 기법을 말한다.
데이터 처리부는 데이터만 가지고 있을 뿐, 처리 방법이 정해져 있지 않아 외부에서 제공된 함수에 의존한다.
     
람다식
자바는 함수형 프로그래밍을 위해 Java 8부터 람다식을 지원한다.
데이터 처리부는 람다식을 받아 매개변수에 데이터를 대입하고 중괄호를 실행시킨다.
자바는 람다식을 익명 구현 객체로 변환한다.
인터페이스의 익명 구현 객체를 람다식으로 표현하려면 반드시 하나의 추상메소드만 가져야 한다.
인터페이스가 단 하나의 추상메소드를 가질 때, 이를 함수형 인터페이스 라고 한다.
인터페이스가 함수형 인터페이스임을 보장하기 위해서는 @FunctionalInterface 어노테이션을 붙이면 된다. 컴파일 시 추상메소드가 하나인지 검색하기 때문에 정확한 함수형 인터페이스를 작성할 수 있다.
[형식]
(매개변수, ...) -> { 처리내용 }
     
[예]
public interface Runnable {
 void run();
}
람다식 => ( ) -> {  }
     
@FunctionalInterface
public interface Calculable {
 void calculate(int x, int y);
}
람다식 => (x, y) -> {  }

