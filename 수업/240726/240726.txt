~ 웹
Front
[ HTML / CSS / JavaScript ]
-
AJax = > JQuery
-
React
-
Next.js ( 본인공부 )
--------------------------
Server
Spring
---------------------------
Back
DB

~
-> cloud 에 소스 upload  ( Naver Cloud )
================================
구문 설명
CREATE TABLE board_java: 새로운 테이블을 생성합니다. 테이블 이름은 board_java입니다.

seq NUMBER PRIMARY KEY: seq 컬럼은 NUMBER 타입이며, 기본 키(Primary Key)로 설정됩니다. 기본 키는 테이블의 각 행을 고유하게 식별하는데 사용됩니다.
id VARCHAR2(30): id 컬럼은 VARCHAR2 타입이며 최대 30자의 문자열을 저장할 수 있습니다.
name VARCHAR2(15): name 컬럼은 VARCHAR2 타입이며 최대 15자의 문자열을 저장할 수 있습니다.
subject VARCHAR2(100): subject 컬럼은 VARCHAR2 타입이며 최대 100자의 문자열을 저장할 수 있습니다.
content VARCHAR2(500): content 컬럼은 VARCHAR2 타입이며 최대 500자의 문자열을 저장할 수 있습니다.
logtime DATE: logtime 컬럼은 DATE 타입으로, 날짜와 시간을 저장할 수 있습니다.
상세 설명
테이블 생성:

CREATE TABLE 명령어를 사용하여 새로운 테이블을 만듭니다. 이 테이블의 이름은 board_java입니다.
컬럼 정의:

seq:
NUMBER 타입: 숫자 데이터를 저장합니다.
PRIMARY KEY: 이 컬럼은 기본 키로 설정되어 있어, 테이블의 각 행을 고유하게 식별합니다. 기본 키는 중복 값을 허용하지 않습니다.
id:
VARCHAR2(30) 타입: 최대 30자의 문자열 데이터를 저장합니다. VARCHAR2는 가변 길이 문자열을 저장할 수 있는 데이터 타입입니다.
name:
VARCHAR2(15) 타입: 최대 15자의 문자열 데이터를 저장합니다.
subject:
VARCHAR2(100) 타입: 최대 100자의 문자열 데이터를 저장합니다.
content:
VARCHAR2(500) 타입: 최대 500자의 문자열 데이터를 저장합니다.
logtime:
DATE 타입: 날짜와 시간을 저장합니다.

--\
시퀸스

구문 설명
CREATE SEQUENCE board_java_seq: 새로운 시퀀스를 생성합니다. 시퀀스 이름은 board_java_seq입니다.
START WITH 1: 시퀀스의 초기 값을 1로 설정합니다.
INCREMENT BY 1: 시퀀스의 값을 증가시킬 때마다 1씩 증가시킵니다.
NOCACHE: 시퀀스 값을 미리 할당하지 않습니다. (캐시 사용 안 함)
상세 설명
시퀀스 생성:

CREATE SEQUENCE 명령어를 사용하여 새로운 시퀀스를 만듭니다. 이 시퀀스의 이름은 board_java_seq입니다.
시퀀스 옵션:

START WITH 1:
시퀀스의 초기 값을 1로 설정합니다. 즉, 시퀀스를 처음 사용할 때 반환되는 값은 1입니다.
INCREMENT BY 1:
시퀀스의 값을 증가시킬 때마다 1씩 증가시킵니다. 예를 들어, 첫 번째 값이 1이라면 두 번째 값은 2, 세 번째 값은 3이 됩니다.
NOCACHE:
시퀀스 값을 미리 할당하지 않습니다. 기본적으로 시퀀스는 성능을 높이기 위해 일정 수의 값을 미리 할당할 수 있습니다. NOCACHE 옵션을 사용하면 시퀀스 값을 미리 할당하지 않고, 매번 새로운 값을 생성합니다. 이는 성능에는 영향을 줄 수 있지만, 값을 절대로 중복되지 않게 해야 할 때 유용합니다.

======================================
Git 사용하기 !
형상관리(버전관리) 도구.
웹 호스팅 서비스


D:
 Git
    lib
Git-2.45.64bit
1. 다운로드 
2. 설치
3. Git Bash
~ : tild / home directory
/ : 루트
pwd : 자신의 위치를 확인

cd .. : change directory

폴더에 workspace 생성후 입력창에 cd wo(tab)


편집기 ==> vi

i (insert) 편집모드
:q!  저장하지 않고 나감
:wq 저장하고 나감

mkdir : make directory : 폴더생성
cp a b ( a를 b에 복사하기 )

rm
cat a = a를 보여줘

touch 생성

git 환경설정
git config --global user.name "KimSeongChan97"
git config --global user.email "sck2270@gmail.com"
git config --list

git 저장소 만들기~

git init ( git 초기화 )

ls -la (전체 파일 보기)

git branch -m main ( main으로 이름변경 )

git add [항목]

git status

버전관리(파일로 저장)
git commit -m "파일" (메시지필수)

git diff 변경점 보여줌

https://github.com/KimSeongChan97/git_exam.git




























