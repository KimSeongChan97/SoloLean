
클래스당 *.class 파일이 생성됨

OOP 
=> 중복성 배체 힘들수 있음 -> A O P(Spring)

객체지향 : 중복 코드 제거 / 결합도를 낮춤 
======================================
객체지향언어 - OOP(Object Oriented Programming)
: 모의실험을 목적으로 사용
: 실제 사물의 속성(데이터)과 기능(메소드)을 정의하여 가상세계를 구현 
: 모의실험을 통해 많은 시간과 노력을 절감
: 객체지향이론은 캡슐화, 상속, 추상화 개념 
: 코드의 재사용이 높다
: 유지보수가 용이하다
: 캡슐화, 상속, 다형성의 특징

클래스
객체를 정의한 것 
[형식]
class  클래스명 {
접근제한자 자료형 필드명; 
접근제한자 메소드() { 
}
class Inner클래스명 { 
}
}
======================================

라면 자판기(클래스)
-> 속성 (데이터) : 라면, 물, 스프
-> 기능 : 물을 넣는다 / 물 온도
--> 가상 시뮬
가상이기 때문에 모든 클래스는 new 생성해줘야 한다.

private : 클래스 안에서만 접근 가능.

받기만 하는 함수 앞엔 set ~ ( ) 가 된다.
(가져와야)보내기만 하는 함수 앞엔 get ~ ( ) 가 된다.
(-> boolean is ~ ( )  )


~DTO.java (Data Transfer Object)
~VO.java ( Value Object )





















































